# coding: utf-8

"""
    Open Bank Project API

    An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2023. Licensed under the AGPL and commercial licences.  # noqa: E501

    OpenAPI spec version: v5.0.0
    Contact: contact@tesobe.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from obp_python.configuration import Configuration


class ViewJsonV500(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'can_see_transaction_start_date': 'bool',
        'can_add_url': 'bool',
        'can_add_where_tag': 'bool',
        'can_see_transaction_this_bank_account': 'bool',
        'can_grant_access_to_views': 'list[str]',
        'can_see_bank_account_owners': 'bool',
        'can_see_bank_routing_address': 'bool',
        'can_see_private_alias': 'bool',
        'can_edit_owner_comment': 'bool',
        'is_system': 'bool',
        'can_see_other_account_national_identifier': 'bool',
        'can_see_bank_routing_scheme': 'bool',
        'can_see_public_alias': 'bool',
        'can_see_physical_location': 'bool',
        'can_see_owner_comment': 'bool',
        'can_see_bank_account_iban': 'bool',
        'can_see_corporate_location': 'bool',
        'can_see_bank_account_number': 'bool',
        'can_see_other_account_bank_name': 'bool',
        'description': 'str',
        'can_see_bank_account_routing_scheme': 'bool',
        'can_see_transaction_other_bank_account': 'bool',
        'can_delete_corporate_location': 'bool',
        'can_see_comments': 'bool',
        'can_see_bank_account_bank_name': 'bool',
        'can_add_more_info': 'bool',
        'can_create_direct_debit': 'bool',
        'can_see_other_account_number': 'bool',
        'can_see_other_account_swift_bic': 'bool',
        'can_add_open_corporates_url': 'bool',
        'can_see_other_account_kind': 'bool',
        'can_add_transaction_request_to_own_account': 'bool',
        'can_delete_physical_location': 'bool',
        'can_see_bank_account_label': 'bool',
        'can_see_transaction_currency': 'bool',
        'is_public': 'bool',
        'can_see_transaction_finish_date': 'bool',
        'can_see_bank_account_routing_address': 'bool',
        'can_add_tag': 'bool',
        'can_see_images': 'bool',
        'can_query_available_funds': 'bool',
        'can_see_bank_account_credit_limit': 'bool',
        'can_see_bank_account_currency': 'bool',
        'hide_metadata_if_alias_used': 'bool',
        'can_delete_where_tag': 'bool',
        'alias': 'str',
        'can_add_image_url': 'bool',
        'can_add_comment': 'bool',
        'can_see_image_url': 'bool',
        'id': 'str',
        'can_create_standing_order': 'bool',
        'can_see_bank_account_national_identifier': 'bool',
        'can_add_counterparty': 'bool',
        'can_add_transaction_request_to_any_account': 'bool',
        'can_revoke_access_to_views': 'list[str]',
        'can_see_tags': 'bool',
        'can_see_open_corporates_url': 'bool',
        'short_name': 'str',
        'can_delete_tag': 'bool',
        'can_see_other_account_routing_scheme': 'bool',
        'can_see_more_info': 'bool',
        'can_see_transaction_metadata': 'bool',
        'can_delete_comment': 'bool',
        'can_see_where_tag': 'bool',
        'can_add_private_alias': 'bool',
        'is_firehose': 'bool',
        'can_add_public_alias': 'bool',
        'can_see_bank_account_swift_bic': 'bool',
        'can_add_image': 'bool',
        'can_see_transaction_type': 'bool',
        'can_see_other_account_routing_address': 'bool',
        'can_see_other_account_iban': 'bool',
        'can_add_physical_location': 'bool',
        'can_add_corporate_location': 'bool',
        'can_delete_image': 'bool',
        'can_see_url': 'bool',
        'can_see_bank_account_balance': 'bool',
        'can_see_other_bank_routing_address': 'bool',
        'can_see_transaction_balance': 'bool',
        'metadata_view': 'str',
        'can_see_transaction_amount': 'bool',
        'can_see_other_account_metadata': 'bool',
        'can_see_bank_account_type': 'bool',
        'can_see_other_bank_routing_scheme': 'bool',
        'can_see_transaction_description': 'bool'
    }

    attribute_map = {
        'can_see_transaction_start_date': 'can_see_transaction_start_date',
        'can_add_url': 'can_add_url',
        'can_add_where_tag': 'can_add_where_tag',
        'can_see_transaction_this_bank_account': 'can_see_transaction_this_bank_account',
        'can_grant_access_to_views': 'can_grant_access_to_views',
        'can_see_bank_account_owners': 'can_see_bank_account_owners',
        'can_see_bank_routing_address': 'can_see_bank_routing_address',
        'can_see_private_alias': 'can_see_private_alias',
        'can_edit_owner_comment': 'can_edit_owner_comment',
        'is_system': 'is_system',
        'can_see_other_account_national_identifier': 'can_see_other_account_national_identifier',
        'can_see_bank_routing_scheme': 'can_see_bank_routing_scheme',
        'can_see_public_alias': 'can_see_public_alias',
        'can_see_physical_location': 'can_see_physical_location',
        'can_see_owner_comment': 'can_see_owner_comment',
        'can_see_bank_account_iban': 'can_see_bank_account_iban',
        'can_see_corporate_location': 'can_see_corporate_location',
        'can_see_bank_account_number': 'can_see_bank_account_number',
        'can_see_other_account_bank_name': 'can_see_other_account_bank_name',
        'description': 'description',
        'can_see_bank_account_routing_scheme': 'can_see_bank_account_routing_scheme',
        'can_see_transaction_other_bank_account': 'can_see_transaction_other_bank_account',
        'can_delete_corporate_location': 'can_delete_corporate_location',
        'can_see_comments': 'can_see_comments',
        'can_see_bank_account_bank_name': 'can_see_bank_account_bank_name',
        'can_add_more_info': 'can_add_more_info',
        'can_create_direct_debit': 'can_create_direct_debit',
        'can_see_other_account_number': 'can_see_other_account_number',
        'can_see_other_account_swift_bic': 'can_see_other_account_swift_bic',
        'can_add_open_corporates_url': 'can_add_open_corporates_url',
        'can_see_other_account_kind': 'can_see_other_account_kind',
        'can_add_transaction_request_to_own_account': 'can_add_transaction_request_to_own_account',
        'can_delete_physical_location': 'can_delete_physical_location',
        'can_see_bank_account_label': 'can_see_bank_account_label',
        'can_see_transaction_currency': 'can_see_transaction_currency',
        'is_public': 'is_public',
        'can_see_transaction_finish_date': 'can_see_transaction_finish_date',
        'can_see_bank_account_routing_address': 'can_see_bank_account_routing_address',
        'can_add_tag': 'can_add_tag',
        'can_see_images': 'can_see_images',
        'can_query_available_funds': 'can_query_available_funds',
        'can_see_bank_account_credit_limit': 'can_see_bank_account_credit_limit',
        'can_see_bank_account_currency': 'can_see_bank_account_currency',
        'hide_metadata_if_alias_used': 'hide_metadata_if_alias_used',
        'can_delete_where_tag': 'can_delete_where_tag',
        'alias': 'alias',
        'can_add_image_url': 'can_add_image_url',
        'can_add_comment': 'can_add_comment',
        'can_see_image_url': 'can_see_image_url',
        'id': 'id',
        'can_create_standing_order': 'can_create_standing_order',
        'can_see_bank_account_national_identifier': 'can_see_bank_account_national_identifier',
        'can_add_counterparty': 'can_add_counterparty',
        'can_add_transaction_request_to_any_account': 'can_add_transaction_request_to_any_account',
        'can_revoke_access_to_views': 'can_revoke_access_to_views',
        'can_see_tags': 'can_see_tags',
        'can_see_open_corporates_url': 'can_see_open_corporates_url',
        'short_name': 'short_name',
        'can_delete_tag': 'can_delete_tag',
        'can_see_other_account_routing_scheme': 'can_see_other_account_routing_scheme',
        'can_see_more_info': 'can_see_more_info',
        'can_see_transaction_metadata': 'can_see_transaction_metadata',
        'can_delete_comment': 'can_delete_comment',
        'can_see_where_tag': 'can_see_where_tag',
        'can_add_private_alias': 'can_add_private_alias',
        'is_firehose': 'is_firehose',
        'can_add_public_alias': 'can_add_public_alias',
        'can_see_bank_account_swift_bic': 'can_see_bank_account_swift_bic',
        'can_add_image': 'can_add_image',
        'can_see_transaction_type': 'can_see_transaction_type',
        'can_see_other_account_routing_address': 'can_see_other_account_routing_address',
        'can_see_other_account_iban': 'can_see_other_account_iban',
        'can_add_physical_location': 'can_add_physical_location',
        'can_add_corporate_location': 'can_add_corporate_location',
        'can_delete_image': 'can_delete_image',
        'can_see_url': 'can_see_url',
        'can_see_bank_account_balance': 'can_see_bank_account_balance',
        'can_see_other_bank_routing_address': 'can_see_other_bank_routing_address',
        'can_see_transaction_balance': 'can_see_transaction_balance',
        'metadata_view': 'metadata_view',
        'can_see_transaction_amount': 'can_see_transaction_amount',
        'can_see_other_account_metadata': 'can_see_other_account_metadata',
        'can_see_bank_account_type': 'can_see_bank_account_type',
        'can_see_other_bank_routing_scheme': 'can_see_other_bank_routing_scheme',
        'can_see_transaction_description': 'can_see_transaction_description'
    }

    def __init__(self, can_see_transaction_start_date=None, can_add_url=None, can_add_where_tag=None, can_see_transaction_this_bank_account=None, can_grant_access_to_views=None, can_see_bank_account_owners=None, can_see_bank_routing_address=None, can_see_private_alias=None, can_edit_owner_comment=None, is_system=None, can_see_other_account_national_identifier=None, can_see_bank_routing_scheme=None, can_see_public_alias=None, can_see_physical_location=None, can_see_owner_comment=None, can_see_bank_account_iban=None, can_see_corporate_location=None, can_see_bank_account_number=None, can_see_other_account_bank_name=None, description=None, can_see_bank_account_routing_scheme=None, can_see_transaction_other_bank_account=None, can_delete_corporate_location=None, can_see_comments=None, can_see_bank_account_bank_name=None, can_add_more_info=None, can_create_direct_debit=None, can_see_other_account_number=None, can_see_other_account_swift_bic=None, can_add_open_corporates_url=None, can_see_other_account_kind=None, can_add_transaction_request_to_own_account=None, can_delete_physical_location=None, can_see_bank_account_label=None, can_see_transaction_currency=None, is_public=None, can_see_transaction_finish_date=None, can_see_bank_account_routing_address=None, can_add_tag=None, can_see_images=None, can_query_available_funds=None, can_see_bank_account_credit_limit=None, can_see_bank_account_currency=None, hide_metadata_if_alias_used=None, can_delete_where_tag=None, alias=None, can_add_image_url=None, can_add_comment=None, can_see_image_url=None, id=None, can_create_standing_order=None, can_see_bank_account_national_identifier=None, can_add_counterparty=None, can_add_transaction_request_to_any_account=None, can_revoke_access_to_views=None, can_see_tags=None, can_see_open_corporates_url=None, short_name=None, can_delete_tag=None, can_see_other_account_routing_scheme=None, can_see_more_info=None, can_see_transaction_metadata=None, can_delete_comment=None, can_see_where_tag=None, can_add_private_alias=None, is_firehose=None, can_add_public_alias=None, can_see_bank_account_swift_bic=None, can_add_image=None, can_see_transaction_type=None, can_see_other_account_routing_address=None, can_see_other_account_iban=None, can_add_physical_location=None, can_add_corporate_location=None, can_delete_image=None, can_see_url=None, can_see_bank_account_balance=None, can_see_other_bank_routing_address=None, can_see_transaction_balance=None, metadata_view=None, can_see_transaction_amount=None, can_see_other_account_metadata=None, can_see_bank_account_type=None, can_see_other_bank_routing_scheme=None, can_see_transaction_description=None, _configuration=None):  # noqa: E501
        """ViewJsonV500 - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._can_see_transaction_start_date = None
        self._can_add_url = None
        self._can_add_where_tag = None
        self._can_see_transaction_this_bank_account = None
        self._can_grant_access_to_views = None
        self._can_see_bank_account_owners = None
        self._can_see_bank_routing_address = None
        self._can_see_private_alias = None
        self._can_edit_owner_comment = None
        self._is_system = None
        self._can_see_other_account_national_identifier = None
        self._can_see_bank_routing_scheme = None
        self._can_see_public_alias = None
        self._can_see_physical_location = None
        self._can_see_owner_comment = None
        self._can_see_bank_account_iban = None
        self._can_see_corporate_location = None
        self._can_see_bank_account_number = None
        self._can_see_other_account_bank_name = None
        self._description = None
        self._can_see_bank_account_routing_scheme = None
        self._can_see_transaction_other_bank_account = None
        self._can_delete_corporate_location = None
        self._can_see_comments = None
        self._can_see_bank_account_bank_name = None
        self._can_add_more_info = None
        self._can_create_direct_debit = None
        self._can_see_other_account_number = None
        self._can_see_other_account_swift_bic = None
        self._can_add_open_corporates_url = None
        self._can_see_other_account_kind = None
        self._can_add_transaction_request_to_own_account = None
        self._can_delete_physical_location = None
        self._can_see_bank_account_label = None
        self._can_see_transaction_currency = None
        self._is_public = None
        self._can_see_transaction_finish_date = None
        self._can_see_bank_account_routing_address = None
        self._can_add_tag = None
        self._can_see_images = None
        self._can_query_available_funds = None
        self._can_see_bank_account_credit_limit = None
        self._can_see_bank_account_currency = None
        self._hide_metadata_if_alias_used = None
        self._can_delete_where_tag = None
        self._alias = None
        self._can_add_image_url = None
        self._can_add_comment = None
        self._can_see_image_url = None
        self._id = None
        self._can_create_standing_order = None
        self._can_see_bank_account_national_identifier = None
        self._can_add_counterparty = None
        self._can_add_transaction_request_to_any_account = None
        self._can_revoke_access_to_views = None
        self._can_see_tags = None
        self._can_see_open_corporates_url = None
        self._short_name = None
        self._can_delete_tag = None
        self._can_see_other_account_routing_scheme = None
        self._can_see_more_info = None
        self._can_see_transaction_metadata = None
        self._can_delete_comment = None
        self._can_see_where_tag = None
        self._can_add_private_alias = None
        self._is_firehose = None
        self._can_add_public_alias = None
        self._can_see_bank_account_swift_bic = None
        self._can_add_image = None
        self._can_see_transaction_type = None
        self._can_see_other_account_routing_address = None
        self._can_see_other_account_iban = None
        self._can_add_physical_location = None
        self._can_add_corporate_location = None
        self._can_delete_image = None
        self._can_see_url = None
        self._can_see_bank_account_balance = None
        self._can_see_other_bank_routing_address = None
        self._can_see_transaction_balance = None
        self._metadata_view = None
        self._can_see_transaction_amount = None
        self._can_see_other_account_metadata = None
        self._can_see_bank_account_type = None
        self._can_see_other_bank_routing_scheme = None
        self._can_see_transaction_description = None
        self.discriminator = None

        self.can_see_transaction_start_date = can_see_transaction_start_date
        self.can_add_url = can_add_url
        self.can_add_where_tag = can_add_where_tag
        self.can_see_transaction_this_bank_account = can_see_transaction_this_bank_account
        self.can_grant_access_to_views = can_grant_access_to_views
        self.can_see_bank_account_owners = can_see_bank_account_owners
        self.can_see_bank_routing_address = can_see_bank_routing_address
        self.can_see_private_alias = can_see_private_alias
        self.can_edit_owner_comment = can_edit_owner_comment
        self.is_system = is_system
        self.can_see_other_account_national_identifier = can_see_other_account_national_identifier
        self.can_see_bank_routing_scheme = can_see_bank_routing_scheme
        self.can_see_public_alias = can_see_public_alias
        self.can_see_physical_location = can_see_physical_location
        self.can_see_owner_comment = can_see_owner_comment
        self.can_see_bank_account_iban = can_see_bank_account_iban
        self.can_see_corporate_location = can_see_corporate_location
        self.can_see_bank_account_number = can_see_bank_account_number
        self.can_see_other_account_bank_name = can_see_other_account_bank_name
        self.description = description
        self.can_see_bank_account_routing_scheme = can_see_bank_account_routing_scheme
        self.can_see_transaction_other_bank_account = can_see_transaction_other_bank_account
        self.can_delete_corporate_location = can_delete_corporate_location
        self.can_see_comments = can_see_comments
        self.can_see_bank_account_bank_name = can_see_bank_account_bank_name
        self.can_add_more_info = can_add_more_info
        self.can_create_direct_debit = can_create_direct_debit
        self.can_see_other_account_number = can_see_other_account_number
        self.can_see_other_account_swift_bic = can_see_other_account_swift_bic
        self.can_add_open_corporates_url = can_add_open_corporates_url
        self.can_see_other_account_kind = can_see_other_account_kind
        self.can_add_transaction_request_to_own_account = can_add_transaction_request_to_own_account
        self.can_delete_physical_location = can_delete_physical_location
        self.can_see_bank_account_label = can_see_bank_account_label
        self.can_see_transaction_currency = can_see_transaction_currency
        self.is_public = is_public
        self.can_see_transaction_finish_date = can_see_transaction_finish_date
        self.can_see_bank_account_routing_address = can_see_bank_account_routing_address
        self.can_add_tag = can_add_tag
        self.can_see_images = can_see_images
        self.can_query_available_funds = can_query_available_funds
        self.can_see_bank_account_credit_limit = can_see_bank_account_credit_limit
        self.can_see_bank_account_currency = can_see_bank_account_currency
        self.hide_metadata_if_alias_used = hide_metadata_if_alias_used
        self.can_delete_where_tag = can_delete_where_tag
        self.alias = alias
        self.can_add_image_url = can_add_image_url
        self.can_add_comment = can_add_comment
        self.can_see_image_url = can_see_image_url
        self.id = id
        self.can_create_standing_order = can_create_standing_order
        self.can_see_bank_account_national_identifier = can_see_bank_account_national_identifier
        self.can_add_counterparty = can_add_counterparty
        self.can_add_transaction_request_to_any_account = can_add_transaction_request_to_any_account
        self.can_revoke_access_to_views = can_revoke_access_to_views
        self.can_see_tags = can_see_tags
        self.can_see_open_corporates_url = can_see_open_corporates_url
        self.short_name = short_name
        self.can_delete_tag = can_delete_tag
        self.can_see_other_account_routing_scheme = can_see_other_account_routing_scheme
        self.can_see_more_info = can_see_more_info
        self.can_see_transaction_metadata = can_see_transaction_metadata
        self.can_delete_comment = can_delete_comment
        self.can_see_where_tag = can_see_where_tag
        self.can_add_private_alias = can_add_private_alias
        if is_firehose is not None:
            self.is_firehose = is_firehose
        self.can_add_public_alias = can_add_public_alias
        self.can_see_bank_account_swift_bic = can_see_bank_account_swift_bic
        self.can_add_image = can_add_image
        self.can_see_transaction_type = can_see_transaction_type
        self.can_see_other_account_routing_address = can_see_other_account_routing_address
        self.can_see_other_account_iban = can_see_other_account_iban
        self.can_add_physical_location = can_add_physical_location
        self.can_add_corporate_location = can_add_corporate_location
        self.can_delete_image = can_delete_image
        self.can_see_url = can_see_url
        self.can_see_bank_account_balance = can_see_bank_account_balance
        self.can_see_other_bank_routing_address = can_see_other_bank_routing_address
        self.can_see_transaction_balance = can_see_transaction_balance
        self.metadata_view = metadata_view
        self.can_see_transaction_amount = can_see_transaction_amount
        self.can_see_other_account_metadata = can_see_other_account_metadata
        self.can_see_bank_account_type = can_see_bank_account_type
        self.can_see_other_bank_routing_scheme = can_see_other_bank_routing_scheme
        self.can_see_transaction_description = can_see_transaction_description

    @property
    def can_see_transaction_start_date(self):
        """Gets the can_see_transaction_start_date of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_start_date of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_start_date

    @can_see_transaction_start_date.setter
    def can_see_transaction_start_date(self, can_see_transaction_start_date):
        """Sets the can_see_transaction_start_date of this ViewJsonV500.


        :param can_see_transaction_start_date: The can_see_transaction_start_date of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_start_date is None:
            raise ValueError("Invalid value for `can_see_transaction_start_date`, must not be `None`")  # noqa: E501

        self._can_see_transaction_start_date = can_see_transaction_start_date

    @property
    def can_add_url(self):
        """Gets the can_add_url of this ViewJsonV500.  # noqa: E501


        :return: The can_add_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_url

    @can_add_url.setter
    def can_add_url(self, can_add_url):
        """Sets the can_add_url of this ViewJsonV500.


        :param can_add_url: The can_add_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_url is None:
            raise ValueError("Invalid value for `can_add_url`, must not be `None`")  # noqa: E501

        self._can_add_url = can_add_url

    @property
    def can_add_where_tag(self):
        """Gets the can_add_where_tag of this ViewJsonV500.  # noqa: E501


        :return: The can_add_where_tag of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_where_tag

    @can_add_where_tag.setter
    def can_add_where_tag(self, can_add_where_tag):
        """Sets the can_add_where_tag of this ViewJsonV500.


        :param can_add_where_tag: The can_add_where_tag of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_where_tag is None:
            raise ValueError("Invalid value for `can_add_where_tag`, must not be `None`")  # noqa: E501

        self._can_add_where_tag = can_add_where_tag

    @property
    def can_see_transaction_this_bank_account(self):
        """Gets the can_see_transaction_this_bank_account of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_this_bank_account of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_this_bank_account

    @can_see_transaction_this_bank_account.setter
    def can_see_transaction_this_bank_account(self, can_see_transaction_this_bank_account):
        """Sets the can_see_transaction_this_bank_account of this ViewJsonV500.


        :param can_see_transaction_this_bank_account: The can_see_transaction_this_bank_account of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_this_bank_account is None:
            raise ValueError("Invalid value for `can_see_transaction_this_bank_account`, must not be `None`")  # noqa: E501

        self._can_see_transaction_this_bank_account = can_see_transaction_this_bank_account

    @property
    def can_grant_access_to_views(self):
        """Gets the can_grant_access_to_views of this ViewJsonV500.  # noqa: E501


        :return: The can_grant_access_to_views of this ViewJsonV500.  # noqa: E501
        :rtype: list[str]
        """
        return self._can_grant_access_to_views

    @can_grant_access_to_views.setter
    def can_grant_access_to_views(self, can_grant_access_to_views):
        """Sets the can_grant_access_to_views of this ViewJsonV500.


        :param can_grant_access_to_views: The can_grant_access_to_views of this ViewJsonV500.  # noqa: E501
        :type: list[str]
        """
        if self._configuration.client_side_validation and can_grant_access_to_views is None:
            raise ValueError("Invalid value for `can_grant_access_to_views`, must not be `None`")  # noqa: E501

        self._can_grant_access_to_views = can_grant_access_to_views

    @property
    def can_see_bank_account_owners(self):
        """Gets the can_see_bank_account_owners of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_owners of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_owners

    @can_see_bank_account_owners.setter
    def can_see_bank_account_owners(self, can_see_bank_account_owners):
        """Sets the can_see_bank_account_owners of this ViewJsonV500.


        :param can_see_bank_account_owners: The can_see_bank_account_owners of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_owners is None:
            raise ValueError("Invalid value for `can_see_bank_account_owners`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_owners = can_see_bank_account_owners

    @property
    def can_see_bank_routing_address(self):
        """Gets the can_see_bank_routing_address of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_routing_address of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_routing_address

    @can_see_bank_routing_address.setter
    def can_see_bank_routing_address(self, can_see_bank_routing_address):
        """Sets the can_see_bank_routing_address of this ViewJsonV500.


        :param can_see_bank_routing_address: The can_see_bank_routing_address of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_routing_address is None:
            raise ValueError("Invalid value for `can_see_bank_routing_address`, must not be `None`")  # noqa: E501

        self._can_see_bank_routing_address = can_see_bank_routing_address

    @property
    def can_see_private_alias(self):
        """Gets the can_see_private_alias of this ViewJsonV500.  # noqa: E501


        :return: The can_see_private_alias of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_private_alias

    @can_see_private_alias.setter
    def can_see_private_alias(self, can_see_private_alias):
        """Sets the can_see_private_alias of this ViewJsonV500.


        :param can_see_private_alias: The can_see_private_alias of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_private_alias is None:
            raise ValueError("Invalid value for `can_see_private_alias`, must not be `None`")  # noqa: E501

        self._can_see_private_alias = can_see_private_alias

    @property
    def can_edit_owner_comment(self):
        """Gets the can_edit_owner_comment of this ViewJsonV500.  # noqa: E501


        :return: The can_edit_owner_comment of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_edit_owner_comment

    @can_edit_owner_comment.setter
    def can_edit_owner_comment(self, can_edit_owner_comment):
        """Sets the can_edit_owner_comment of this ViewJsonV500.


        :param can_edit_owner_comment: The can_edit_owner_comment of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_edit_owner_comment is None:
            raise ValueError("Invalid value for `can_edit_owner_comment`, must not be `None`")  # noqa: E501

        self._can_edit_owner_comment = can_edit_owner_comment

    @property
    def is_system(self):
        """Gets the is_system of this ViewJsonV500.  # noqa: E501


        :return: The is_system of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._is_system

    @is_system.setter
    def is_system(self, is_system):
        """Sets the is_system of this ViewJsonV500.


        :param is_system: The is_system of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and is_system is None:
            raise ValueError("Invalid value for `is_system`, must not be `None`")  # noqa: E501

        self._is_system = is_system

    @property
    def can_see_other_account_national_identifier(self):
        """Gets the can_see_other_account_national_identifier of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_national_identifier of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_national_identifier

    @can_see_other_account_national_identifier.setter
    def can_see_other_account_national_identifier(self, can_see_other_account_national_identifier):
        """Sets the can_see_other_account_national_identifier of this ViewJsonV500.


        :param can_see_other_account_national_identifier: The can_see_other_account_national_identifier of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_national_identifier is None:
            raise ValueError("Invalid value for `can_see_other_account_national_identifier`, must not be `None`")  # noqa: E501

        self._can_see_other_account_national_identifier = can_see_other_account_national_identifier

    @property
    def can_see_bank_routing_scheme(self):
        """Gets the can_see_bank_routing_scheme of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_routing_scheme of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_routing_scheme

    @can_see_bank_routing_scheme.setter
    def can_see_bank_routing_scheme(self, can_see_bank_routing_scheme):
        """Sets the can_see_bank_routing_scheme of this ViewJsonV500.


        :param can_see_bank_routing_scheme: The can_see_bank_routing_scheme of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_routing_scheme is None:
            raise ValueError("Invalid value for `can_see_bank_routing_scheme`, must not be `None`")  # noqa: E501

        self._can_see_bank_routing_scheme = can_see_bank_routing_scheme

    @property
    def can_see_public_alias(self):
        """Gets the can_see_public_alias of this ViewJsonV500.  # noqa: E501


        :return: The can_see_public_alias of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_public_alias

    @can_see_public_alias.setter
    def can_see_public_alias(self, can_see_public_alias):
        """Sets the can_see_public_alias of this ViewJsonV500.


        :param can_see_public_alias: The can_see_public_alias of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_public_alias is None:
            raise ValueError("Invalid value for `can_see_public_alias`, must not be `None`")  # noqa: E501

        self._can_see_public_alias = can_see_public_alias

    @property
    def can_see_physical_location(self):
        """Gets the can_see_physical_location of this ViewJsonV500.  # noqa: E501


        :return: The can_see_physical_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_physical_location

    @can_see_physical_location.setter
    def can_see_physical_location(self, can_see_physical_location):
        """Sets the can_see_physical_location of this ViewJsonV500.


        :param can_see_physical_location: The can_see_physical_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_physical_location is None:
            raise ValueError("Invalid value for `can_see_physical_location`, must not be `None`")  # noqa: E501

        self._can_see_physical_location = can_see_physical_location

    @property
    def can_see_owner_comment(self):
        """Gets the can_see_owner_comment of this ViewJsonV500.  # noqa: E501


        :return: The can_see_owner_comment of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_owner_comment

    @can_see_owner_comment.setter
    def can_see_owner_comment(self, can_see_owner_comment):
        """Sets the can_see_owner_comment of this ViewJsonV500.


        :param can_see_owner_comment: The can_see_owner_comment of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_owner_comment is None:
            raise ValueError("Invalid value for `can_see_owner_comment`, must not be `None`")  # noqa: E501

        self._can_see_owner_comment = can_see_owner_comment

    @property
    def can_see_bank_account_iban(self):
        """Gets the can_see_bank_account_iban of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_iban of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_iban

    @can_see_bank_account_iban.setter
    def can_see_bank_account_iban(self, can_see_bank_account_iban):
        """Sets the can_see_bank_account_iban of this ViewJsonV500.


        :param can_see_bank_account_iban: The can_see_bank_account_iban of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_iban is None:
            raise ValueError("Invalid value for `can_see_bank_account_iban`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_iban = can_see_bank_account_iban

    @property
    def can_see_corporate_location(self):
        """Gets the can_see_corporate_location of this ViewJsonV500.  # noqa: E501


        :return: The can_see_corporate_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_corporate_location

    @can_see_corporate_location.setter
    def can_see_corporate_location(self, can_see_corporate_location):
        """Sets the can_see_corporate_location of this ViewJsonV500.


        :param can_see_corporate_location: The can_see_corporate_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_corporate_location is None:
            raise ValueError("Invalid value for `can_see_corporate_location`, must not be `None`")  # noqa: E501

        self._can_see_corporate_location = can_see_corporate_location

    @property
    def can_see_bank_account_number(self):
        """Gets the can_see_bank_account_number of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_number of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_number

    @can_see_bank_account_number.setter
    def can_see_bank_account_number(self, can_see_bank_account_number):
        """Sets the can_see_bank_account_number of this ViewJsonV500.


        :param can_see_bank_account_number: The can_see_bank_account_number of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_number is None:
            raise ValueError("Invalid value for `can_see_bank_account_number`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_number = can_see_bank_account_number

    @property
    def can_see_other_account_bank_name(self):
        """Gets the can_see_other_account_bank_name of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_bank_name of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_bank_name

    @can_see_other_account_bank_name.setter
    def can_see_other_account_bank_name(self, can_see_other_account_bank_name):
        """Sets the can_see_other_account_bank_name of this ViewJsonV500.


        :param can_see_other_account_bank_name: The can_see_other_account_bank_name of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_bank_name is None:
            raise ValueError("Invalid value for `can_see_other_account_bank_name`, must not be `None`")  # noqa: E501

        self._can_see_other_account_bank_name = can_see_other_account_bank_name

    @property
    def description(self):
        """Gets the description of this ViewJsonV500.  # noqa: E501


        :return: The description of this ViewJsonV500.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ViewJsonV500.


        :param description: The description of this ViewJsonV500.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def can_see_bank_account_routing_scheme(self):
        """Gets the can_see_bank_account_routing_scheme of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_routing_scheme of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_routing_scheme

    @can_see_bank_account_routing_scheme.setter
    def can_see_bank_account_routing_scheme(self, can_see_bank_account_routing_scheme):
        """Sets the can_see_bank_account_routing_scheme of this ViewJsonV500.


        :param can_see_bank_account_routing_scheme: The can_see_bank_account_routing_scheme of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_routing_scheme is None:
            raise ValueError("Invalid value for `can_see_bank_account_routing_scheme`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_routing_scheme = can_see_bank_account_routing_scheme

    @property
    def can_see_transaction_other_bank_account(self):
        """Gets the can_see_transaction_other_bank_account of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_other_bank_account of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_other_bank_account

    @can_see_transaction_other_bank_account.setter
    def can_see_transaction_other_bank_account(self, can_see_transaction_other_bank_account):
        """Sets the can_see_transaction_other_bank_account of this ViewJsonV500.


        :param can_see_transaction_other_bank_account: The can_see_transaction_other_bank_account of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_other_bank_account is None:
            raise ValueError("Invalid value for `can_see_transaction_other_bank_account`, must not be `None`")  # noqa: E501

        self._can_see_transaction_other_bank_account = can_see_transaction_other_bank_account

    @property
    def can_delete_corporate_location(self):
        """Gets the can_delete_corporate_location of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_corporate_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_corporate_location

    @can_delete_corporate_location.setter
    def can_delete_corporate_location(self, can_delete_corporate_location):
        """Sets the can_delete_corporate_location of this ViewJsonV500.


        :param can_delete_corporate_location: The can_delete_corporate_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_corporate_location is None:
            raise ValueError("Invalid value for `can_delete_corporate_location`, must not be `None`")  # noqa: E501

        self._can_delete_corporate_location = can_delete_corporate_location

    @property
    def can_see_comments(self):
        """Gets the can_see_comments of this ViewJsonV500.  # noqa: E501


        :return: The can_see_comments of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_comments

    @can_see_comments.setter
    def can_see_comments(self, can_see_comments):
        """Sets the can_see_comments of this ViewJsonV500.


        :param can_see_comments: The can_see_comments of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_comments is None:
            raise ValueError("Invalid value for `can_see_comments`, must not be `None`")  # noqa: E501

        self._can_see_comments = can_see_comments

    @property
    def can_see_bank_account_bank_name(self):
        """Gets the can_see_bank_account_bank_name of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_bank_name of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_bank_name

    @can_see_bank_account_bank_name.setter
    def can_see_bank_account_bank_name(self, can_see_bank_account_bank_name):
        """Sets the can_see_bank_account_bank_name of this ViewJsonV500.


        :param can_see_bank_account_bank_name: The can_see_bank_account_bank_name of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_bank_name is None:
            raise ValueError("Invalid value for `can_see_bank_account_bank_name`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_bank_name = can_see_bank_account_bank_name

    @property
    def can_add_more_info(self):
        """Gets the can_add_more_info of this ViewJsonV500.  # noqa: E501


        :return: The can_add_more_info of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_more_info

    @can_add_more_info.setter
    def can_add_more_info(self, can_add_more_info):
        """Sets the can_add_more_info of this ViewJsonV500.


        :param can_add_more_info: The can_add_more_info of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_more_info is None:
            raise ValueError("Invalid value for `can_add_more_info`, must not be `None`")  # noqa: E501

        self._can_add_more_info = can_add_more_info

    @property
    def can_create_direct_debit(self):
        """Gets the can_create_direct_debit of this ViewJsonV500.  # noqa: E501


        :return: The can_create_direct_debit of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_create_direct_debit

    @can_create_direct_debit.setter
    def can_create_direct_debit(self, can_create_direct_debit):
        """Sets the can_create_direct_debit of this ViewJsonV500.


        :param can_create_direct_debit: The can_create_direct_debit of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_create_direct_debit is None:
            raise ValueError("Invalid value for `can_create_direct_debit`, must not be `None`")  # noqa: E501

        self._can_create_direct_debit = can_create_direct_debit

    @property
    def can_see_other_account_number(self):
        """Gets the can_see_other_account_number of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_number of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_number

    @can_see_other_account_number.setter
    def can_see_other_account_number(self, can_see_other_account_number):
        """Sets the can_see_other_account_number of this ViewJsonV500.


        :param can_see_other_account_number: The can_see_other_account_number of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_number is None:
            raise ValueError("Invalid value for `can_see_other_account_number`, must not be `None`")  # noqa: E501

        self._can_see_other_account_number = can_see_other_account_number

    @property
    def can_see_other_account_swift_bic(self):
        """Gets the can_see_other_account_swift_bic of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_swift_bic of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_swift_bic

    @can_see_other_account_swift_bic.setter
    def can_see_other_account_swift_bic(self, can_see_other_account_swift_bic):
        """Sets the can_see_other_account_swift_bic of this ViewJsonV500.


        :param can_see_other_account_swift_bic: The can_see_other_account_swift_bic of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_swift_bic is None:
            raise ValueError("Invalid value for `can_see_other_account_swift_bic`, must not be `None`")  # noqa: E501

        self._can_see_other_account_swift_bic = can_see_other_account_swift_bic

    @property
    def can_add_open_corporates_url(self):
        """Gets the can_add_open_corporates_url of this ViewJsonV500.  # noqa: E501


        :return: The can_add_open_corporates_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_open_corporates_url

    @can_add_open_corporates_url.setter
    def can_add_open_corporates_url(self, can_add_open_corporates_url):
        """Sets the can_add_open_corporates_url of this ViewJsonV500.


        :param can_add_open_corporates_url: The can_add_open_corporates_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_open_corporates_url is None:
            raise ValueError("Invalid value for `can_add_open_corporates_url`, must not be `None`")  # noqa: E501

        self._can_add_open_corporates_url = can_add_open_corporates_url

    @property
    def can_see_other_account_kind(self):
        """Gets the can_see_other_account_kind of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_kind of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_kind

    @can_see_other_account_kind.setter
    def can_see_other_account_kind(self, can_see_other_account_kind):
        """Sets the can_see_other_account_kind of this ViewJsonV500.


        :param can_see_other_account_kind: The can_see_other_account_kind of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_kind is None:
            raise ValueError("Invalid value for `can_see_other_account_kind`, must not be `None`")  # noqa: E501

        self._can_see_other_account_kind = can_see_other_account_kind

    @property
    def can_add_transaction_request_to_own_account(self):
        """Gets the can_add_transaction_request_to_own_account of this ViewJsonV500.  # noqa: E501


        :return: The can_add_transaction_request_to_own_account of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_transaction_request_to_own_account

    @can_add_transaction_request_to_own_account.setter
    def can_add_transaction_request_to_own_account(self, can_add_transaction_request_to_own_account):
        """Sets the can_add_transaction_request_to_own_account of this ViewJsonV500.


        :param can_add_transaction_request_to_own_account: The can_add_transaction_request_to_own_account of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_transaction_request_to_own_account is None:
            raise ValueError("Invalid value for `can_add_transaction_request_to_own_account`, must not be `None`")  # noqa: E501

        self._can_add_transaction_request_to_own_account = can_add_transaction_request_to_own_account

    @property
    def can_delete_physical_location(self):
        """Gets the can_delete_physical_location of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_physical_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_physical_location

    @can_delete_physical_location.setter
    def can_delete_physical_location(self, can_delete_physical_location):
        """Sets the can_delete_physical_location of this ViewJsonV500.


        :param can_delete_physical_location: The can_delete_physical_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_physical_location is None:
            raise ValueError("Invalid value for `can_delete_physical_location`, must not be `None`")  # noqa: E501

        self._can_delete_physical_location = can_delete_physical_location

    @property
    def can_see_bank_account_label(self):
        """Gets the can_see_bank_account_label of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_label of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_label

    @can_see_bank_account_label.setter
    def can_see_bank_account_label(self, can_see_bank_account_label):
        """Sets the can_see_bank_account_label of this ViewJsonV500.


        :param can_see_bank_account_label: The can_see_bank_account_label of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_label is None:
            raise ValueError("Invalid value for `can_see_bank_account_label`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_label = can_see_bank_account_label

    @property
    def can_see_transaction_currency(self):
        """Gets the can_see_transaction_currency of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_currency of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_currency

    @can_see_transaction_currency.setter
    def can_see_transaction_currency(self, can_see_transaction_currency):
        """Sets the can_see_transaction_currency of this ViewJsonV500.


        :param can_see_transaction_currency: The can_see_transaction_currency of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_currency is None:
            raise ValueError("Invalid value for `can_see_transaction_currency`, must not be `None`")  # noqa: E501

        self._can_see_transaction_currency = can_see_transaction_currency

    @property
    def is_public(self):
        """Gets the is_public of this ViewJsonV500.  # noqa: E501


        :return: The is_public of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this ViewJsonV500.


        :param is_public: The is_public of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and is_public is None:
            raise ValueError("Invalid value for `is_public`, must not be `None`")  # noqa: E501

        self._is_public = is_public

    @property
    def can_see_transaction_finish_date(self):
        """Gets the can_see_transaction_finish_date of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_finish_date of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_finish_date

    @can_see_transaction_finish_date.setter
    def can_see_transaction_finish_date(self, can_see_transaction_finish_date):
        """Sets the can_see_transaction_finish_date of this ViewJsonV500.


        :param can_see_transaction_finish_date: The can_see_transaction_finish_date of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_finish_date is None:
            raise ValueError("Invalid value for `can_see_transaction_finish_date`, must not be `None`")  # noqa: E501

        self._can_see_transaction_finish_date = can_see_transaction_finish_date

    @property
    def can_see_bank_account_routing_address(self):
        """Gets the can_see_bank_account_routing_address of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_routing_address of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_routing_address

    @can_see_bank_account_routing_address.setter
    def can_see_bank_account_routing_address(self, can_see_bank_account_routing_address):
        """Sets the can_see_bank_account_routing_address of this ViewJsonV500.


        :param can_see_bank_account_routing_address: The can_see_bank_account_routing_address of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_routing_address is None:
            raise ValueError("Invalid value for `can_see_bank_account_routing_address`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_routing_address = can_see_bank_account_routing_address

    @property
    def can_add_tag(self):
        """Gets the can_add_tag of this ViewJsonV500.  # noqa: E501


        :return: The can_add_tag of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_tag

    @can_add_tag.setter
    def can_add_tag(self, can_add_tag):
        """Sets the can_add_tag of this ViewJsonV500.


        :param can_add_tag: The can_add_tag of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_tag is None:
            raise ValueError("Invalid value for `can_add_tag`, must not be `None`")  # noqa: E501

        self._can_add_tag = can_add_tag

    @property
    def can_see_images(self):
        """Gets the can_see_images of this ViewJsonV500.  # noqa: E501


        :return: The can_see_images of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_images

    @can_see_images.setter
    def can_see_images(self, can_see_images):
        """Sets the can_see_images of this ViewJsonV500.


        :param can_see_images: The can_see_images of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_images is None:
            raise ValueError("Invalid value for `can_see_images`, must not be `None`")  # noqa: E501

        self._can_see_images = can_see_images

    @property
    def can_query_available_funds(self):
        """Gets the can_query_available_funds of this ViewJsonV500.  # noqa: E501


        :return: The can_query_available_funds of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_query_available_funds

    @can_query_available_funds.setter
    def can_query_available_funds(self, can_query_available_funds):
        """Sets the can_query_available_funds of this ViewJsonV500.


        :param can_query_available_funds: The can_query_available_funds of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_query_available_funds is None:
            raise ValueError("Invalid value for `can_query_available_funds`, must not be `None`")  # noqa: E501

        self._can_query_available_funds = can_query_available_funds

    @property
    def can_see_bank_account_credit_limit(self):
        """Gets the can_see_bank_account_credit_limit of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_credit_limit of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_credit_limit

    @can_see_bank_account_credit_limit.setter
    def can_see_bank_account_credit_limit(self, can_see_bank_account_credit_limit):
        """Sets the can_see_bank_account_credit_limit of this ViewJsonV500.


        :param can_see_bank_account_credit_limit: The can_see_bank_account_credit_limit of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_credit_limit is None:
            raise ValueError("Invalid value for `can_see_bank_account_credit_limit`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_credit_limit = can_see_bank_account_credit_limit

    @property
    def can_see_bank_account_currency(self):
        """Gets the can_see_bank_account_currency of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_currency of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_currency

    @can_see_bank_account_currency.setter
    def can_see_bank_account_currency(self, can_see_bank_account_currency):
        """Sets the can_see_bank_account_currency of this ViewJsonV500.


        :param can_see_bank_account_currency: The can_see_bank_account_currency of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_currency is None:
            raise ValueError("Invalid value for `can_see_bank_account_currency`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_currency = can_see_bank_account_currency

    @property
    def hide_metadata_if_alias_used(self):
        """Gets the hide_metadata_if_alias_used of this ViewJsonV500.  # noqa: E501


        :return: The hide_metadata_if_alias_used of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._hide_metadata_if_alias_used

    @hide_metadata_if_alias_used.setter
    def hide_metadata_if_alias_used(self, hide_metadata_if_alias_used):
        """Sets the hide_metadata_if_alias_used of this ViewJsonV500.


        :param hide_metadata_if_alias_used: The hide_metadata_if_alias_used of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and hide_metadata_if_alias_used is None:
            raise ValueError("Invalid value for `hide_metadata_if_alias_used`, must not be `None`")  # noqa: E501

        self._hide_metadata_if_alias_used = hide_metadata_if_alias_used

    @property
    def can_delete_where_tag(self):
        """Gets the can_delete_where_tag of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_where_tag of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_where_tag

    @can_delete_where_tag.setter
    def can_delete_where_tag(self, can_delete_where_tag):
        """Sets the can_delete_where_tag of this ViewJsonV500.


        :param can_delete_where_tag: The can_delete_where_tag of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_where_tag is None:
            raise ValueError("Invalid value for `can_delete_where_tag`, must not be `None`")  # noqa: E501

        self._can_delete_where_tag = can_delete_where_tag

    @property
    def alias(self):
        """Gets the alias of this ViewJsonV500.  # noqa: E501


        :return: The alias of this ViewJsonV500.  # noqa: E501
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this ViewJsonV500.


        :param alias: The alias of this ViewJsonV500.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and alias is None:
            raise ValueError("Invalid value for `alias`, must not be `None`")  # noqa: E501

        self._alias = alias

    @property
    def can_add_image_url(self):
        """Gets the can_add_image_url of this ViewJsonV500.  # noqa: E501


        :return: The can_add_image_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_image_url

    @can_add_image_url.setter
    def can_add_image_url(self, can_add_image_url):
        """Sets the can_add_image_url of this ViewJsonV500.


        :param can_add_image_url: The can_add_image_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_image_url is None:
            raise ValueError("Invalid value for `can_add_image_url`, must not be `None`")  # noqa: E501

        self._can_add_image_url = can_add_image_url

    @property
    def can_add_comment(self):
        """Gets the can_add_comment of this ViewJsonV500.  # noqa: E501


        :return: The can_add_comment of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_comment

    @can_add_comment.setter
    def can_add_comment(self, can_add_comment):
        """Sets the can_add_comment of this ViewJsonV500.


        :param can_add_comment: The can_add_comment of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_comment is None:
            raise ValueError("Invalid value for `can_add_comment`, must not be `None`")  # noqa: E501

        self._can_add_comment = can_add_comment

    @property
    def can_see_image_url(self):
        """Gets the can_see_image_url of this ViewJsonV500.  # noqa: E501


        :return: The can_see_image_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_image_url

    @can_see_image_url.setter
    def can_see_image_url(self, can_see_image_url):
        """Sets the can_see_image_url of this ViewJsonV500.


        :param can_see_image_url: The can_see_image_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_image_url is None:
            raise ValueError("Invalid value for `can_see_image_url`, must not be `None`")  # noqa: E501

        self._can_see_image_url = can_see_image_url

    @property
    def id(self):
        """Gets the id of this ViewJsonV500.  # noqa: E501


        :return: The id of this ViewJsonV500.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ViewJsonV500.


        :param id: The id of this ViewJsonV500.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def can_create_standing_order(self):
        """Gets the can_create_standing_order of this ViewJsonV500.  # noqa: E501


        :return: The can_create_standing_order of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_create_standing_order

    @can_create_standing_order.setter
    def can_create_standing_order(self, can_create_standing_order):
        """Sets the can_create_standing_order of this ViewJsonV500.


        :param can_create_standing_order: The can_create_standing_order of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_create_standing_order is None:
            raise ValueError("Invalid value for `can_create_standing_order`, must not be `None`")  # noqa: E501

        self._can_create_standing_order = can_create_standing_order

    @property
    def can_see_bank_account_national_identifier(self):
        """Gets the can_see_bank_account_national_identifier of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_national_identifier of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_national_identifier

    @can_see_bank_account_national_identifier.setter
    def can_see_bank_account_national_identifier(self, can_see_bank_account_national_identifier):
        """Sets the can_see_bank_account_national_identifier of this ViewJsonV500.


        :param can_see_bank_account_national_identifier: The can_see_bank_account_national_identifier of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_national_identifier is None:
            raise ValueError("Invalid value for `can_see_bank_account_national_identifier`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_national_identifier = can_see_bank_account_national_identifier

    @property
    def can_add_counterparty(self):
        """Gets the can_add_counterparty of this ViewJsonV500.  # noqa: E501


        :return: The can_add_counterparty of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_counterparty

    @can_add_counterparty.setter
    def can_add_counterparty(self, can_add_counterparty):
        """Sets the can_add_counterparty of this ViewJsonV500.


        :param can_add_counterparty: The can_add_counterparty of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_counterparty is None:
            raise ValueError("Invalid value for `can_add_counterparty`, must not be `None`")  # noqa: E501

        self._can_add_counterparty = can_add_counterparty

    @property
    def can_add_transaction_request_to_any_account(self):
        """Gets the can_add_transaction_request_to_any_account of this ViewJsonV500.  # noqa: E501


        :return: The can_add_transaction_request_to_any_account of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_transaction_request_to_any_account

    @can_add_transaction_request_to_any_account.setter
    def can_add_transaction_request_to_any_account(self, can_add_transaction_request_to_any_account):
        """Sets the can_add_transaction_request_to_any_account of this ViewJsonV500.


        :param can_add_transaction_request_to_any_account: The can_add_transaction_request_to_any_account of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_transaction_request_to_any_account is None:
            raise ValueError("Invalid value for `can_add_transaction_request_to_any_account`, must not be `None`")  # noqa: E501

        self._can_add_transaction_request_to_any_account = can_add_transaction_request_to_any_account

    @property
    def can_revoke_access_to_views(self):
        """Gets the can_revoke_access_to_views of this ViewJsonV500.  # noqa: E501


        :return: The can_revoke_access_to_views of this ViewJsonV500.  # noqa: E501
        :rtype: list[str]
        """
        return self._can_revoke_access_to_views

    @can_revoke_access_to_views.setter
    def can_revoke_access_to_views(self, can_revoke_access_to_views):
        """Sets the can_revoke_access_to_views of this ViewJsonV500.


        :param can_revoke_access_to_views: The can_revoke_access_to_views of this ViewJsonV500.  # noqa: E501
        :type: list[str]
        """
        if self._configuration.client_side_validation and can_revoke_access_to_views is None:
            raise ValueError("Invalid value for `can_revoke_access_to_views`, must not be `None`")  # noqa: E501

        self._can_revoke_access_to_views = can_revoke_access_to_views

    @property
    def can_see_tags(self):
        """Gets the can_see_tags of this ViewJsonV500.  # noqa: E501


        :return: The can_see_tags of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_tags

    @can_see_tags.setter
    def can_see_tags(self, can_see_tags):
        """Sets the can_see_tags of this ViewJsonV500.


        :param can_see_tags: The can_see_tags of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_tags is None:
            raise ValueError("Invalid value for `can_see_tags`, must not be `None`")  # noqa: E501

        self._can_see_tags = can_see_tags

    @property
    def can_see_open_corporates_url(self):
        """Gets the can_see_open_corporates_url of this ViewJsonV500.  # noqa: E501


        :return: The can_see_open_corporates_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_open_corporates_url

    @can_see_open_corporates_url.setter
    def can_see_open_corporates_url(self, can_see_open_corporates_url):
        """Sets the can_see_open_corporates_url of this ViewJsonV500.


        :param can_see_open_corporates_url: The can_see_open_corporates_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_open_corporates_url is None:
            raise ValueError("Invalid value for `can_see_open_corporates_url`, must not be `None`")  # noqa: E501

        self._can_see_open_corporates_url = can_see_open_corporates_url

    @property
    def short_name(self):
        """Gets the short_name of this ViewJsonV500.  # noqa: E501


        :return: The short_name of this ViewJsonV500.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this ViewJsonV500.


        :param short_name: The short_name of this ViewJsonV500.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and short_name is None:
            raise ValueError("Invalid value for `short_name`, must not be `None`")  # noqa: E501

        self._short_name = short_name

    @property
    def can_delete_tag(self):
        """Gets the can_delete_tag of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_tag of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_tag

    @can_delete_tag.setter
    def can_delete_tag(self, can_delete_tag):
        """Sets the can_delete_tag of this ViewJsonV500.


        :param can_delete_tag: The can_delete_tag of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_tag is None:
            raise ValueError("Invalid value for `can_delete_tag`, must not be `None`")  # noqa: E501

        self._can_delete_tag = can_delete_tag

    @property
    def can_see_other_account_routing_scheme(self):
        """Gets the can_see_other_account_routing_scheme of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_routing_scheme of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_routing_scheme

    @can_see_other_account_routing_scheme.setter
    def can_see_other_account_routing_scheme(self, can_see_other_account_routing_scheme):
        """Sets the can_see_other_account_routing_scheme of this ViewJsonV500.


        :param can_see_other_account_routing_scheme: The can_see_other_account_routing_scheme of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_routing_scheme is None:
            raise ValueError("Invalid value for `can_see_other_account_routing_scheme`, must not be `None`")  # noqa: E501

        self._can_see_other_account_routing_scheme = can_see_other_account_routing_scheme

    @property
    def can_see_more_info(self):
        """Gets the can_see_more_info of this ViewJsonV500.  # noqa: E501


        :return: The can_see_more_info of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_more_info

    @can_see_more_info.setter
    def can_see_more_info(self, can_see_more_info):
        """Sets the can_see_more_info of this ViewJsonV500.


        :param can_see_more_info: The can_see_more_info of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_more_info is None:
            raise ValueError("Invalid value for `can_see_more_info`, must not be `None`")  # noqa: E501

        self._can_see_more_info = can_see_more_info

    @property
    def can_see_transaction_metadata(self):
        """Gets the can_see_transaction_metadata of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_metadata of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_metadata

    @can_see_transaction_metadata.setter
    def can_see_transaction_metadata(self, can_see_transaction_metadata):
        """Sets the can_see_transaction_metadata of this ViewJsonV500.


        :param can_see_transaction_metadata: The can_see_transaction_metadata of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_metadata is None:
            raise ValueError("Invalid value for `can_see_transaction_metadata`, must not be `None`")  # noqa: E501

        self._can_see_transaction_metadata = can_see_transaction_metadata

    @property
    def can_delete_comment(self):
        """Gets the can_delete_comment of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_comment of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_comment

    @can_delete_comment.setter
    def can_delete_comment(self, can_delete_comment):
        """Sets the can_delete_comment of this ViewJsonV500.


        :param can_delete_comment: The can_delete_comment of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_comment is None:
            raise ValueError("Invalid value for `can_delete_comment`, must not be `None`")  # noqa: E501

        self._can_delete_comment = can_delete_comment

    @property
    def can_see_where_tag(self):
        """Gets the can_see_where_tag of this ViewJsonV500.  # noqa: E501


        :return: The can_see_where_tag of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_where_tag

    @can_see_where_tag.setter
    def can_see_where_tag(self, can_see_where_tag):
        """Sets the can_see_where_tag of this ViewJsonV500.


        :param can_see_where_tag: The can_see_where_tag of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_where_tag is None:
            raise ValueError("Invalid value for `can_see_where_tag`, must not be `None`")  # noqa: E501

        self._can_see_where_tag = can_see_where_tag

    @property
    def can_add_private_alias(self):
        """Gets the can_add_private_alias of this ViewJsonV500.  # noqa: E501


        :return: The can_add_private_alias of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_private_alias

    @can_add_private_alias.setter
    def can_add_private_alias(self, can_add_private_alias):
        """Sets the can_add_private_alias of this ViewJsonV500.


        :param can_add_private_alias: The can_add_private_alias of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_private_alias is None:
            raise ValueError("Invalid value for `can_add_private_alias`, must not be `None`")  # noqa: E501

        self._can_add_private_alias = can_add_private_alias

    @property
    def is_firehose(self):
        """Gets the is_firehose of this ViewJsonV500.  # noqa: E501


        :return: The is_firehose of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._is_firehose

    @is_firehose.setter
    def is_firehose(self, is_firehose):
        """Sets the is_firehose of this ViewJsonV500.


        :param is_firehose: The is_firehose of this ViewJsonV500.  # noqa: E501
        :type: bool
        """

        self._is_firehose = is_firehose

    @property
    def can_add_public_alias(self):
        """Gets the can_add_public_alias of this ViewJsonV500.  # noqa: E501


        :return: The can_add_public_alias of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_public_alias

    @can_add_public_alias.setter
    def can_add_public_alias(self, can_add_public_alias):
        """Sets the can_add_public_alias of this ViewJsonV500.


        :param can_add_public_alias: The can_add_public_alias of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_public_alias is None:
            raise ValueError("Invalid value for `can_add_public_alias`, must not be `None`")  # noqa: E501

        self._can_add_public_alias = can_add_public_alias

    @property
    def can_see_bank_account_swift_bic(self):
        """Gets the can_see_bank_account_swift_bic of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_swift_bic of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_swift_bic

    @can_see_bank_account_swift_bic.setter
    def can_see_bank_account_swift_bic(self, can_see_bank_account_swift_bic):
        """Sets the can_see_bank_account_swift_bic of this ViewJsonV500.


        :param can_see_bank_account_swift_bic: The can_see_bank_account_swift_bic of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_swift_bic is None:
            raise ValueError("Invalid value for `can_see_bank_account_swift_bic`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_swift_bic = can_see_bank_account_swift_bic

    @property
    def can_add_image(self):
        """Gets the can_add_image of this ViewJsonV500.  # noqa: E501


        :return: The can_add_image of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_image

    @can_add_image.setter
    def can_add_image(self, can_add_image):
        """Sets the can_add_image of this ViewJsonV500.


        :param can_add_image: The can_add_image of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_image is None:
            raise ValueError("Invalid value for `can_add_image`, must not be `None`")  # noqa: E501

        self._can_add_image = can_add_image

    @property
    def can_see_transaction_type(self):
        """Gets the can_see_transaction_type of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_type of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_type

    @can_see_transaction_type.setter
    def can_see_transaction_type(self, can_see_transaction_type):
        """Sets the can_see_transaction_type of this ViewJsonV500.


        :param can_see_transaction_type: The can_see_transaction_type of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_type is None:
            raise ValueError("Invalid value for `can_see_transaction_type`, must not be `None`")  # noqa: E501

        self._can_see_transaction_type = can_see_transaction_type

    @property
    def can_see_other_account_routing_address(self):
        """Gets the can_see_other_account_routing_address of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_routing_address of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_routing_address

    @can_see_other_account_routing_address.setter
    def can_see_other_account_routing_address(self, can_see_other_account_routing_address):
        """Sets the can_see_other_account_routing_address of this ViewJsonV500.


        :param can_see_other_account_routing_address: The can_see_other_account_routing_address of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_routing_address is None:
            raise ValueError("Invalid value for `can_see_other_account_routing_address`, must not be `None`")  # noqa: E501

        self._can_see_other_account_routing_address = can_see_other_account_routing_address

    @property
    def can_see_other_account_iban(self):
        """Gets the can_see_other_account_iban of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_iban of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_iban

    @can_see_other_account_iban.setter
    def can_see_other_account_iban(self, can_see_other_account_iban):
        """Sets the can_see_other_account_iban of this ViewJsonV500.


        :param can_see_other_account_iban: The can_see_other_account_iban of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_iban is None:
            raise ValueError("Invalid value for `can_see_other_account_iban`, must not be `None`")  # noqa: E501

        self._can_see_other_account_iban = can_see_other_account_iban

    @property
    def can_add_physical_location(self):
        """Gets the can_add_physical_location of this ViewJsonV500.  # noqa: E501


        :return: The can_add_physical_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_physical_location

    @can_add_physical_location.setter
    def can_add_physical_location(self, can_add_physical_location):
        """Sets the can_add_physical_location of this ViewJsonV500.


        :param can_add_physical_location: The can_add_physical_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_physical_location is None:
            raise ValueError("Invalid value for `can_add_physical_location`, must not be `None`")  # noqa: E501

        self._can_add_physical_location = can_add_physical_location

    @property
    def can_add_corporate_location(self):
        """Gets the can_add_corporate_location of this ViewJsonV500.  # noqa: E501


        :return: The can_add_corporate_location of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_add_corporate_location

    @can_add_corporate_location.setter
    def can_add_corporate_location(self, can_add_corporate_location):
        """Sets the can_add_corporate_location of this ViewJsonV500.


        :param can_add_corporate_location: The can_add_corporate_location of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_add_corporate_location is None:
            raise ValueError("Invalid value for `can_add_corporate_location`, must not be `None`")  # noqa: E501

        self._can_add_corporate_location = can_add_corporate_location

    @property
    def can_delete_image(self):
        """Gets the can_delete_image of this ViewJsonV500.  # noqa: E501


        :return: The can_delete_image of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_delete_image

    @can_delete_image.setter
    def can_delete_image(self, can_delete_image):
        """Sets the can_delete_image of this ViewJsonV500.


        :param can_delete_image: The can_delete_image of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_delete_image is None:
            raise ValueError("Invalid value for `can_delete_image`, must not be `None`")  # noqa: E501

        self._can_delete_image = can_delete_image

    @property
    def can_see_url(self):
        """Gets the can_see_url of this ViewJsonV500.  # noqa: E501


        :return: The can_see_url of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_url

    @can_see_url.setter
    def can_see_url(self, can_see_url):
        """Sets the can_see_url of this ViewJsonV500.


        :param can_see_url: The can_see_url of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_url is None:
            raise ValueError("Invalid value for `can_see_url`, must not be `None`")  # noqa: E501

        self._can_see_url = can_see_url

    @property
    def can_see_bank_account_balance(self):
        """Gets the can_see_bank_account_balance of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_balance of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_balance

    @can_see_bank_account_balance.setter
    def can_see_bank_account_balance(self, can_see_bank_account_balance):
        """Sets the can_see_bank_account_balance of this ViewJsonV500.


        :param can_see_bank_account_balance: The can_see_bank_account_balance of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_balance is None:
            raise ValueError("Invalid value for `can_see_bank_account_balance`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_balance = can_see_bank_account_balance

    @property
    def can_see_other_bank_routing_address(self):
        """Gets the can_see_other_bank_routing_address of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_bank_routing_address of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_bank_routing_address

    @can_see_other_bank_routing_address.setter
    def can_see_other_bank_routing_address(self, can_see_other_bank_routing_address):
        """Sets the can_see_other_bank_routing_address of this ViewJsonV500.


        :param can_see_other_bank_routing_address: The can_see_other_bank_routing_address of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_bank_routing_address is None:
            raise ValueError("Invalid value for `can_see_other_bank_routing_address`, must not be `None`")  # noqa: E501

        self._can_see_other_bank_routing_address = can_see_other_bank_routing_address

    @property
    def can_see_transaction_balance(self):
        """Gets the can_see_transaction_balance of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_balance of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_balance

    @can_see_transaction_balance.setter
    def can_see_transaction_balance(self, can_see_transaction_balance):
        """Sets the can_see_transaction_balance of this ViewJsonV500.


        :param can_see_transaction_balance: The can_see_transaction_balance of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_balance is None:
            raise ValueError("Invalid value for `can_see_transaction_balance`, must not be `None`")  # noqa: E501

        self._can_see_transaction_balance = can_see_transaction_balance

    @property
    def metadata_view(self):
        """Gets the metadata_view of this ViewJsonV500.  # noqa: E501


        :return: The metadata_view of this ViewJsonV500.  # noqa: E501
        :rtype: str
        """
        return self._metadata_view

    @metadata_view.setter
    def metadata_view(self, metadata_view):
        """Sets the metadata_view of this ViewJsonV500.


        :param metadata_view: The metadata_view of this ViewJsonV500.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and metadata_view is None:
            raise ValueError("Invalid value for `metadata_view`, must not be `None`")  # noqa: E501

        self._metadata_view = metadata_view

    @property
    def can_see_transaction_amount(self):
        """Gets the can_see_transaction_amount of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_amount of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_amount

    @can_see_transaction_amount.setter
    def can_see_transaction_amount(self, can_see_transaction_amount):
        """Sets the can_see_transaction_amount of this ViewJsonV500.


        :param can_see_transaction_amount: The can_see_transaction_amount of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_amount is None:
            raise ValueError("Invalid value for `can_see_transaction_amount`, must not be `None`")  # noqa: E501

        self._can_see_transaction_amount = can_see_transaction_amount

    @property
    def can_see_other_account_metadata(self):
        """Gets the can_see_other_account_metadata of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_account_metadata of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_account_metadata

    @can_see_other_account_metadata.setter
    def can_see_other_account_metadata(self, can_see_other_account_metadata):
        """Sets the can_see_other_account_metadata of this ViewJsonV500.


        :param can_see_other_account_metadata: The can_see_other_account_metadata of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_account_metadata is None:
            raise ValueError("Invalid value for `can_see_other_account_metadata`, must not be `None`")  # noqa: E501

        self._can_see_other_account_metadata = can_see_other_account_metadata

    @property
    def can_see_bank_account_type(self):
        """Gets the can_see_bank_account_type of this ViewJsonV500.  # noqa: E501


        :return: The can_see_bank_account_type of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_bank_account_type

    @can_see_bank_account_type.setter
    def can_see_bank_account_type(self, can_see_bank_account_type):
        """Sets the can_see_bank_account_type of this ViewJsonV500.


        :param can_see_bank_account_type: The can_see_bank_account_type of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_bank_account_type is None:
            raise ValueError("Invalid value for `can_see_bank_account_type`, must not be `None`")  # noqa: E501

        self._can_see_bank_account_type = can_see_bank_account_type

    @property
    def can_see_other_bank_routing_scheme(self):
        """Gets the can_see_other_bank_routing_scheme of this ViewJsonV500.  # noqa: E501


        :return: The can_see_other_bank_routing_scheme of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_other_bank_routing_scheme

    @can_see_other_bank_routing_scheme.setter
    def can_see_other_bank_routing_scheme(self, can_see_other_bank_routing_scheme):
        """Sets the can_see_other_bank_routing_scheme of this ViewJsonV500.


        :param can_see_other_bank_routing_scheme: The can_see_other_bank_routing_scheme of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_other_bank_routing_scheme is None:
            raise ValueError("Invalid value for `can_see_other_bank_routing_scheme`, must not be `None`")  # noqa: E501

        self._can_see_other_bank_routing_scheme = can_see_other_bank_routing_scheme

    @property
    def can_see_transaction_description(self):
        """Gets the can_see_transaction_description of this ViewJsonV500.  # noqa: E501


        :return: The can_see_transaction_description of this ViewJsonV500.  # noqa: E501
        :rtype: bool
        """
        return self._can_see_transaction_description

    @can_see_transaction_description.setter
    def can_see_transaction_description(self, can_see_transaction_description):
        """Sets the can_see_transaction_description of this ViewJsonV500.


        :param can_see_transaction_description: The can_see_transaction_description of this ViewJsonV500.  # noqa: E501
        :type: bool
        """
        if self._configuration.client_side_validation and can_see_transaction_description is None:
            raise ValueError("Invalid value for `can_see_transaction_description`, must not be `None`")  # noqa: E501

        self._can_see_transaction_description = can_see_transaction_description

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ViewJsonV500, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ViewJsonV500):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ViewJsonV500):
            return True

        return self.to_dict() != other.to_dict()
