# coding: utf-8

"""
    Open Bank Project API

    An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2023. Licensed under the AGPL and commercial licences.  # noqa: E501

    OpenAPI spec version: v5.0.0
    Contact: contact@tesobe.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from obp_python.configuration import Configuration


class JsonDynamicResourceDoc(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'error_response_bodies': 'str',
        'description': 'str',
        'tags': 'str',
        'dynamic_resource_doc_id': 'str',
        'request_verb': 'str',
        'method_body': 'str',
        'roles': 'str',
        'example_request_body': 'JsonDynamicResourceDocExampleRequestBody',
        'request_url': 'str',
        'bank_id': 'str',
        'partial_function_name': 'str',
        'summary': 'str',
        'success_response_body': 'JsonDynamicResourceDocSuccessResponseBody'
    }

    attribute_map = {
        'error_response_bodies': 'error_response_bodies',
        'description': 'description',
        'tags': 'tags',
        'dynamic_resource_doc_id': 'dynamic_resource_doc_id',
        'request_verb': 'request_verb',
        'method_body': 'method_body',
        'roles': 'roles',
        'example_request_body': 'example_request_body',
        'request_url': 'request_url',
        'bank_id': 'bank_id',
        'partial_function_name': 'partial_function_name',
        'summary': 'summary',
        'success_response_body': 'success_response_body'
    }

    def __init__(self, error_response_bodies=None, description=None, tags=None, dynamic_resource_doc_id=None, request_verb=None, method_body=None, roles=None, example_request_body=None, request_url=None, bank_id=None, partial_function_name=None, summary=None, success_response_body=None, _configuration=None):  # noqa: E501
        """JsonDynamicResourceDoc - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._error_response_bodies = None
        self._description = None
        self._tags = None
        self._dynamic_resource_doc_id = None
        self._request_verb = None
        self._method_body = None
        self._roles = None
        self._example_request_body = None
        self._request_url = None
        self._bank_id = None
        self._partial_function_name = None
        self._summary = None
        self._success_response_body = None
        self.discriminator = None

        self.error_response_bodies = error_response_bodies
        self.description = description
        self.tags = tags
        if dynamic_resource_doc_id is not None:
            self.dynamic_resource_doc_id = dynamic_resource_doc_id
        self.request_verb = request_verb
        self.method_body = method_body
        self.roles = roles
        if example_request_body is not None:
            self.example_request_body = example_request_body
        self.request_url = request_url
        if bank_id is not None:
            self.bank_id = bank_id
        self.partial_function_name = partial_function_name
        self.summary = summary
        if success_response_body is not None:
            self.success_response_body = success_response_body

    @property
    def error_response_bodies(self):
        """Gets the error_response_bodies of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The error_response_bodies of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._error_response_bodies

    @error_response_bodies.setter
    def error_response_bodies(self, error_response_bodies):
        """Sets the error_response_bodies of this JsonDynamicResourceDoc.


        :param error_response_bodies: The error_response_bodies of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and error_response_bodies is None:
            raise ValueError("Invalid value for `error_response_bodies`, must not be `None`")  # noqa: E501

        self._error_response_bodies = error_response_bodies

    @property
    def description(self):
        """Gets the description of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The description of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this JsonDynamicResourceDoc.


        :param description: The description of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def tags(self):
        """Gets the tags of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The tags of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this JsonDynamicResourceDoc.


        :param tags: The tags of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and tags is None:
            raise ValueError("Invalid value for `tags`, must not be `None`")  # noqa: E501

        self._tags = tags

    @property
    def dynamic_resource_doc_id(self):
        """Gets the dynamic_resource_doc_id of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The dynamic_resource_doc_id of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._dynamic_resource_doc_id

    @dynamic_resource_doc_id.setter
    def dynamic_resource_doc_id(self, dynamic_resource_doc_id):
        """Sets the dynamic_resource_doc_id of this JsonDynamicResourceDoc.


        :param dynamic_resource_doc_id: The dynamic_resource_doc_id of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """

        self._dynamic_resource_doc_id = dynamic_resource_doc_id

    @property
    def request_verb(self):
        """Gets the request_verb of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The request_verb of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._request_verb

    @request_verb.setter
    def request_verb(self, request_verb):
        """Sets the request_verb of this JsonDynamicResourceDoc.


        :param request_verb: The request_verb of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and request_verb is None:
            raise ValueError("Invalid value for `request_verb`, must not be `None`")  # noqa: E501

        self._request_verb = request_verb

    @property
    def method_body(self):
        """Gets the method_body of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The method_body of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._method_body

    @method_body.setter
    def method_body(self, method_body):
        """Sets the method_body of this JsonDynamicResourceDoc.


        :param method_body: The method_body of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and method_body is None:
            raise ValueError("Invalid value for `method_body`, must not be `None`")  # noqa: E501

        self._method_body = method_body

    @property
    def roles(self):
        """Gets the roles of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The roles of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._roles

    @roles.setter
    def roles(self, roles):
        """Sets the roles of this JsonDynamicResourceDoc.


        :param roles: The roles of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and roles is None:
            raise ValueError("Invalid value for `roles`, must not be `None`")  # noqa: E501

        self._roles = roles

    @property
    def example_request_body(self):
        """Gets the example_request_body of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The example_request_body of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: JsonDynamicResourceDocExampleRequestBody
        """
        return self._example_request_body

    @example_request_body.setter
    def example_request_body(self, example_request_body):
        """Sets the example_request_body of this JsonDynamicResourceDoc.


        :param example_request_body: The example_request_body of this JsonDynamicResourceDoc.  # noqa: E501
        :type: JsonDynamicResourceDocExampleRequestBody
        """

        self._example_request_body = example_request_body

    @property
    def request_url(self):
        """Gets the request_url of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The request_url of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._request_url

    @request_url.setter
    def request_url(self, request_url):
        """Sets the request_url of this JsonDynamicResourceDoc.


        :param request_url: The request_url of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and request_url is None:
            raise ValueError("Invalid value for `request_url`, must not be `None`")  # noqa: E501

        self._request_url = request_url

    @property
    def bank_id(self):
        """Gets the bank_id of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The bank_id of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._bank_id

    @bank_id.setter
    def bank_id(self, bank_id):
        """Sets the bank_id of this JsonDynamicResourceDoc.


        :param bank_id: The bank_id of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """

        self._bank_id = bank_id

    @property
    def partial_function_name(self):
        """Gets the partial_function_name of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The partial_function_name of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._partial_function_name

    @partial_function_name.setter
    def partial_function_name(self, partial_function_name):
        """Sets the partial_function_name of this JsonDynamicResourceDoc.


        :param partial_function_name: The partial_function_name of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and partial_function_name is None:
            raise ValueError("Invalid value for `partial_function_name`, must not be `None`")  # noqa: E501

        self._partial_function_name = partial_function_name

    @property
    def summary(self):
        """Gets the summary of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The summary of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this JsonDynamicResourceDoc.


        :param summary: The summary of this JsonDynamicResourceDoc.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and summary is None:
            raise ValueError("Invalid value for `summary`, must not be `None`")  # noqa: E501

        self._summary = summary

    @property
    def success_response_body(self):
        """Gets the success_response_body of this JsonDynamicResourceDoc.  # noqa: E501


        :return: The success_response_body of this JsonDynamicResourceDoc.  # noqa: E501
        :rtype: JsonDynamicResourceDocSuccessResponseBody
        """
        return self._success_response_body

    @success_response_body.setter
    def success_response_body(self, success_response_body):
        """Sets the success_response_body of this JsonDynamicResourceDoc.


        :param success_response_body: The success_response_body of this JsonDynamicResourceDoc.  # noqa: E501
        :type: JsonDynamicResourceDocSuccessResponseBody
        """

        self._success_response_body = success_response_body

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(JsonDynamicResourceDoc, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JsonDynamicResourceDoc):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, JsonDynamicResourceDoc):
            return True

        return self.to_dict() != other.to_dict()
