# coding: utf-8

"""
    Open Bank Project API

    An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2023. Licensed under the AGPL and commercial licences.  # noqa: E501

    OpenAPI spec version: v5.0.0
    Contact: contact@tesobe.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from obp_python.configuration import Configuration


class CreditLimitRequestJson(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'requested_current_rate_amount1': 'str',
        'temporary_credit_documentation': 'str',
        'requested_current_valid_end_date': 'str',
        'temporary_requested_current_amount': 'str',
        'requested_current_rate_amount2': 'str',
        'requested_temporary_valid_end_date': 'str',
        'current_credit_documentation': 'str'
    }

    attribute_map = {
        'requested_current_rate_amount1': 'requested_current_rate_amount1',
        'temporary_credit_documentation': 'temporary_credit_documentation',
        'requested_current_valid_end_date': 'requested_current_valid_end_date',
        'temporary_requested_current_amount': 'temporary_requested_current_amount',
        'requested_current_rate_amount2': 'requested_current_rate_amount2',
        'requested_temporary_valid_end_date': 'requested_temporary_valid_end_date',
        'current_credit_documentation': 'current_credit_documentation'
    }

    def __init__(self, requested_current_rate_amount1=None, temporary_credit_documentation=None, requested_current_valid_end_date=None, temporary_requested_current_amount=None, requested_current_rate_amount2=None, requested_temporary_valid_end_date=None, current_credit_documentation=None, _configuration=None):  # noqa: E501
        """CreditLimitRequestJson - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._requested_current_rate_amount1 = None
        self._temporary_credit_documentation = None
        self._requested_current_valid_end_date = None
        self._temporary_requested_current_amount = None
        self._requested_current_rate_amount2 = None
        self._requested_temporary_valid_end_date = None
        self._current_credit_documentation = None
        self.discriminator = None

        self.requested_current_rate_amount1 = requested_current_rate_amount1
        self.temporary_credit_documentation = temporary_credit_documentation
        self.requested_current_valid_end_date = requested_current_valid_end_date
        self.temporary_requested_current_amount = temporary_requested_current_amount
        self.requested_current_rate_amount2 = requested_current_rate_amount2
        self.requested_temporary_valid_end_date = requested_temporary_valid_end_date
        self.current_credit_documentation = current_credit_documentation

    @property
    def requested_current_rate_amount1(self):
        """Gets the requested_current_rate_amount1 of this CreditLimitRequestJson.  # noqa: E501


        :return: The requested_current_rate_amount1 of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._requested_current_rate_amount1

    @requested_current_rate_amount1.setter
    def requested_current_rate_amount1(self, requested_current_rate_amount1):
        """Sets the requested_current_rate_amount1 of this CreditLimitRequestJson.


        :param requested_current_rate_amount1: The requested_current_rate_amount1 of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and requested_current_rate_amount1 is None:
            raise ValueError("Invalid value for `requested_current_rate_amount1`, must not be `None`")  # noqa: E501

        self._requested_current_rate_amount1 = requested_current_rate_amount1

    @property
    def temporary_credit_documentation(self):
        """Gets the temporary_credit_documentation of this CreditLimitRequestJson.  # noqa: E501


        :return: The temporary_credit_documentation of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._temporary_credit_documentation

    @temporary_credit_documentation.setter
    def temporary_credit_documentation(self, temporary_credit_documentation):
        """Sets the temporary_credit_documentation of this CreditLimitRequestJson.


        :param temporary_credit_documentation: The temporary_credit_documentation of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and temporary_credit_documentation is None:
            raise ValueError("Invalid value for `temporary_credit_documentation`, must not be `None`")  # noqa: E501

        self._temporary_credit_documentation = temporary_credit_documentation

    @property
    def requested_current_valid_end_date(self):
        """Gets the requested_current_valid_end_date of this CreditLimitRequestJson.  # noqa: E501


        :return: The requested_current_valid_end_date of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._requested_current_valid_end_date

    @requested_current_valid_end_date.setter
    def requested_current_valid_end_date(self, requested_current_valid_end_date):
        """Sets the requested_current_valid_end_date of this CreditLimitRequestJson.


        :param requested_current_valid_end_date: The requested_current_valid_end_date of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and requested_current_valid_end_date is None:
            raise ValueError("Invalid value for `requested_current_valid_end_date`, must not be `None`")  # noqa: E501

        self._requested_current_valid_end_date = requested_current_valid_end_date

    @property
    def temporary_requested_current_amount(self):
        """Gets the temporary_requested_current_amount of this CreditLimitRequestJson.  # noqa: E501


        :return: The temporary_requested_current_amount of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._temporary_requested_current_amount

    @temporary_requested_current_amount.setter
    def temporary_requested_current_amount(self, temporary_requested_current_amount):
        """Sets the temporary_requested_current_amount of this CreditLimitRequestJson.


        :param temporary_requested_current_amount: The temporary_requested_current_amount of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and temporary_requested_current_amount is None:
            raise ValueError("Invalid value for `temporary_requested_current_amount`, must not be `None`")  # noqa: E501

        self._temporary_requested_current_amount = temporary_requested_current_amount

    @property
    def requested_current_rate_amount2(self):
        """Gets the requested_current_rate_amount2 of this CreditLimitRequestJson.  # noqa: E501


        :return: The requested_current_rate_amount2 of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._requested_current_rate_amount2

    @requested_current_rate_amount2.setter
    def requested_current_rate_amount2(self, requested_current_rate_amount2):
        """Sets the requested_current_rate_amount2 of this CreditLimitRequestJson.


        :param requested_current_rate_amount2: The requested_current_rate_amount2 of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and requested_current_rate_amount2 is None:
            raise ValueError("Invalid value for `requested_current_rate_amount2`, must not be `None`")  # noqa: E501

        self._requested_current_rate_amount2 = requested_current_rate_amount2

    @property
    def requested_temporary_valid_end_date(self):
        """Gets the requested_temporary_valid_end_date of this CreditLimitRequestJson.  # noqa: E501


        :return: The requested_temporary_valid_end_date of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._requested_temporary_valid_end_date

    @requested_temporary_valid_end_date.setter
    def requested_temporary_valid_end_date(self, requested_temporary_valid_end_date):
        """Sets the requested_temporary_valid_end_date of this CreditLimitRequestJson.


        :param requested_temporary_valid_end_date: The requested_temporary_valid_end_date of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and requested_temporary_valid_end_date is None:
            raise ValueError("Invalid value for `requested_temporary_valid_end_date`, must not be `None`")  # noqa: E501

        self._requested_temporary_valid_end_date = requested_temporary_valid_end_date

    @property
    def current_credit_documentation(self):
        """Gets the current_credit_documentation of this CreditLimitRequestJson.  # noqa: E501


        :return: The current_credit_documentation of this CreditLimitRequestJson.  # noqa: E501
        :rtype: str
        """
        return self._current_credit_documentation

    @current_credit_documentation.setter
    def current_credit_documentation(self, current_credit_documentation):
        """Sets the current_credit_documentation of this CreditLimitRequestJson.


        :param current_credit_documentation: The current_credit_documentation of this CreditLimitRequestJson.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and current_credit_documentation is None:
            raise ValueError("Invalid value for `current_credit_documentation`, must not be `None`")  # noqa: E501

        self._current_credit_documentation = current_credit_documentation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CreditLimitRequestJson, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CreditLimitRequestJson):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, CreditLimitRequestJson):
            return True

        return self.to_dict() != other.to_dict()
