# coding: utf-8

"""
    Open Bank Project API

    An Open Source API for Banks. (c) TESOBE GmbH. 2011 - 2023. Licensed under the AGPL and commercial licences.

    OpenAPI spec version: v5.0.0
    Contact: contact@tesobe.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import sys
import os
import re

# python 2 and python 3 compatibility library
from six import iteritems

from ..configuration import Configuration
from ..api_client import ApiClient


class APIApi(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        config = Configuration()
        if api_client:
            self.api_client = api_client
        else:
            if not config.api_client:
                config.api_client = ApiClient()
            self.api_client = config.api_client

    def o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp(self, body, api_version, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Resource Docs.
        <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en and zh , e.g. ?language=zh</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?language=zh\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?language=zh</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp(body, api_version, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :param str bank_id: The bank id (required)
        :return: ResourceDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp_with_http_info(body, api_version, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp_with_http_info(body, api_version, bank_id, **kwargs)
            return data

    def o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp_with_http_info(self, body, api_version, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Resource Docs.
        <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en and zh , e.g. ?language=zh</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?language=zh\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?language=zh</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://test.openbankproject.com/obp/v4.0.0/banks/BANK_ID/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp_with_http_info(body, api_version, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :param str bank_id: The bank id (required)
        :return: ResourceDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'api_version', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp`")
        # verify the required parameter 'api_version' is set
        if ('api_version' not in params) or (params['api_version'] is None):
            raise ValueError("Missing the required parameter `api_version` when calling `o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv1_4_0_get_bank_level_dynamic_resource_docs_obp`")

        resource_path = '/obp/v5.0.0/banks/{BANK_ID}/resource-docs/{API_VERSION}/obp'.replace('{format}', 'json')
        path_params = {}
        if 'api_version' in params:
            path_params['API_VERSION'] = params['api_version']
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ResourceDocsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv1_4_0_get_resource_docs_obp(self, body, api_version, **kwargs):
        """
        Get Resource Docs.
        <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en and zh , e.g. ?language=zh</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?language=zh\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?language=zh</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_resource_docs_obp(body, api_version, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :return: ResourceDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv1_4_0_get_resource_docs_obp_with_http_info(body, api_version, **kwargs)
        else:
            (data) = self.o_b_pv1_4_0_get_resource_docs_obp_with_http_info(body, api_version, **kwargs)
            return data

    def o_b_pv1_4_0_get_resource_docs_obp_with_http_info(self, body, api_version, **kwargs):
        """
        Get Resource Docs.
        <p>Get documentation about the RESTful resources on this server including example bodies for POST and PUT requests.</p><p>This is the native data format used to document OBP endpoints. Each endpoint has a Resource Doc (a Scala case class) defined in the source code.</p><p>This endpoint is used by OBP API Explorer to display and work with the API documentation.</p><p>Most (but not all) fields are also available in swagger format. (The Swagger endpoint is built from Resource Docs.)</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint with tags parameter e.g. ?tags=Account,Bank</p><p>You may filter this endpoint with functions parameter e.g. ?functions=enableDisableConsumers,getConnectorMetrics</p><p>For possible function values, see implemented_by.function in the JSON returned by this endpoint or the OBP source code or the footer of the API Explorer which produces a comma separated list of functions that reflect the server or filtering by API Explorer based on tags etc.</p><p>You may filter this endpoint using the 'content' url parameter, e.g. ?content=dynamic<br />if set content=dynamic, only show dynamic endpoints, if content=static, only show the static endpoints. if omit this parameter, we will show all the endpoints.</p><p>You may need some other language resource docs, now we support en and zh , e.g. ?language=zh</p><p>You can filter with api-collection-id, but api-collection-id can not be used with others together. If api-collection-id is used in URL, it will ignore all other parameters.</p><p>You can easily pass the cache, use different value for cache-modifier, eg: ?cache-modifier= 123</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?language=zh\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?language=zh</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?content=static,dynamic,all</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?api-collection-id=4e866c86-60c3-4268-a221-cb0bbf1ad221</a><br /><a href=\"https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653\">https://test.openbankproject.com/obp/v4.0.0/resource-docs/v4.0.0/obp?cache-modifier=3141592653</a></p><ul><li> operation_id is concatenation of \"v\", version and function and should be unique (used for DOM element IDs etc. maybe used to link to source code) </li><li> version references the version that the API call is defined in.</li><li> function is the (scala) partial function that implements this endpoint. It is unique per version of the API.</li><li> request_url is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the implemented version (the version where this endpoint was defined) e.g. /obp/v1.2.0/resource</li><li> specified_url (recommended to use) is empty for the root call, else the path. It contains the standard prefix (e.g. /obp) and the version specified in the call e.g. /obp/v3.1.0/resource. In OBP, endpoints are first made available at the request_url, but the same resource (function call) is often made available under later versions (specified_url). To access the latest version of all endpoints use the latest version available on your OBP instance e.g. /obp/v3.1.0 - To get the original version use the request_url. We recommend to use the specified_url since non semantic improvements are more likely to be applied to later implementations of the call.</li><li> summary is a short description inline with the swagger terminology. </li><li> description may contain html markup (generated from markdown on the server).</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_resource_docs_obp_with_http_info(body, api_version, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :return: ResourceDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'api_version']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv1_4_0_get_resource_docs_obp" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv1_4_0_get_resource_docs_obp`")
        # verify the required parameter 'api_version' is set
        if ('api_version' not in params) or (params['api_version'] is None):
            raise ValueError("Missing the required parameter `api_version` when calling `o_b_pv1_4_0_get_resource_docs_obp`")

        resource_path = '/obp/v5.0.0/resource-docs/{API_VERSION}/obp'.replace('{format}', 'json')
        path_params = {}
        if 'api_version' in params:
            path_params['API_VERSION'] = params['api_version']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ResourceDocsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv1_4_0_get_resource_docs_swagger(self, body, api_version, **kwargs):
        """
        Get Swagger documentation
        <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_resource_docs_swagger(body, api_version, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :return: EmptyClassJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv1_4_0_get_resource_docs_swagger_with_http_info(body, api_version, **kwargs)
        else:
            (data) = self.o_b_pv1_4_0_get_resource_docs_swagger_with_http_info(body, api_version, **kwargs)
            return data

    def o_b_pv1_4_0_get_resource_docs_swagger_with_http_info(self, body, api_version, **kwargs):
        """
        Get Swagger documentation
        <p>Returns documentation about the RESTful resources on this server in Swagger format.</p><p>API_VERSION is the version you want documentation about e.g. v3.0.0</p><p>You may filter this endpoint using the 'tags' url parameter e.g. ?tags=Account,Bank</p><p>(All endpoints are given one or more tags which for used in grouping)</p><p>You may filter this endpoint using the 'functions' url parameter e.g. ?functions=getBanks,bankById</p><p>(Each endpoint is implemented in the OBP Scala code by a 'function')</p><p>See the Resource Doc endpoint for more information.</p><p>Following are more examples:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?functions=getBanks,bankById</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById\">https://test.openbankproject.com/obp/v3.1.0/resource-docs/v3.1.0/swagger?tags=Account,Bank,PSD2&amp;functions=getBanks,bankById</a></p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv1_4_0_get_resource_docs_swagger_with_http_info(body, api_version, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :param str api_version: eg:v2.2.0, v3.0.0 (required)
        :return: EmptyClassJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'api_version']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv1_4_0_get_resource_docs_swagger" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv1_4_0_get_resource_docs_swagger`")
        # verify the required parameter 'api_version' is set
        if ('api_version' not in params) or (params['api_version'] is None):
            raise ValueError("Missing the required parameter `api_version` when calling `o_b_pv1_4_0_get_resource_docs_swagger`")

        resource_path = '/obp/v5.0.0/resource-docs/{API_VERSION}/swagger'.replace('{format}', 'json')
        path_params = {}
        if 'api_version' in params:
            path_params['API_VERSION'] = params['api_version']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='EmptyClassJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv2_0_0_elastic_search_metrics(self, body, **kwargs):
        """
        Search API Metrics via Elasticsearch
        <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_0_0_elastic_search_metrics(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: EmptyClassJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv2_0_0_elastic_search_metrics_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv2_0_0_elastic_search_metrics_with_http_info(body, **kwargs)
            return data

    def o_b_pv2_0_0_elastic_search_metrics_with_http_info(self, body, **kwargs):
        """
        Search API Metrics via Elasticsearch
        <p>Search the API calls made to this API instance via Elastic Search.</p><p>Login is required.</p><p>CanSearchMetrics entitlement is required to search metrics data.</p><p>parameters:</p><p>esType  - elasticsearch type</p><p>simple query:</p><p>q       - plain_text_query</p><p>df      - default field to search</p><p>sort    - field to sort on</p><p>size    - number of hits returned, default 10</p><p>from    - show hits starting from</p><p>json query:</p><p>source  - JSON_query_(URL-escaped)</p><p>example usage:</p><p>/search/metrics/q=findThis</p><p>or:</p><p>/search/metrics/source={&quot;query&quot;:{&quot;query_string&quot;:{&quot;query&quot;:&quot;findThis&quot;}}}</p><p>Note!!</p><p>The whole JSON query string MUST be URL-encoded:</p><ul><li>For {  use %7B</li><li>For }  use %7D</li><li>For : use %3A</li><li>For &quot; use %22</li></ul><p>etc..</p><p>Only q, source and esType are passed to Elastic</p><p>Elastic simple query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-uri-request.html</a></p><p>Elastic JSON query: <a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html\">https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html</a></p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_0_0_elastic_search_metrics_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: EmptyClassJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv2_0_0_elastic_search_metrics" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv2_0_0_elastic_search_metrics`")

        resource_path = '/obp/v5.0.0/search/metrics'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='EmptyClassJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv2_1_0_get_metrics(self, body, **kwargs):
        """
        Get Metrics
        <p>Get the all metrics</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"ma&#105;&#x6c;&#116;&#x6f;&#x3a;&#x30;1&#46;&#48;&#x30;&#48;Z&#x26;&#108;&#x69;&#x6d;&#x69;t&#61;&#x31;&#x30;&#x30;&#x30;&#x30;&amp;o&#102;&#x66;&#x73;&#101;&#116;&#61;&#x30;&amp;&#x61;&#x6e;&#x6f;&#x6e;&#x3d;&#x66;&#x61;&#x6c;&#115;e&#x26;&#97;p&#x70;&#x5f;&#110;&#97;&#109;&#101;&#x3d;T&#101;&#97;&#116;&#65;&#112;&#112;&#38;i&#109;&#112;l&#x65;&#x6d;&#x65;&#x6e;te&#x64;&#95;&#x69;n&#95;&#x76;&#101;&#114;s&#x69;&#111;n&#61;&#118;2&#46;&#x31;&#46;&#48;&#38;&#118;&#x65;&#114;&#98;&#61;&#x50;O&#x53;&#84;&amp;&#x75;se&#x72;&#x5f;&#105;&#100;&#x3d;&#99;&#55;&#98;6&#x63;&#98;&#x34;7&#45;&#99;&#98;&#57;&#x36;&#45;4&#x34;&#x34;&#49;&#45;&#x38;&#56;01&#x2d;&#51;&#x35;&#98;&#x35;&#55;&#52;&#53;67&#x35;3&#x61;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;&#97;me&#x3d;&#x73;&#x75;&#x73;&#x61;&#110;&#x2e;&#117;&#107;&#46;&#50;9&#x40;&#x65;x&#97;m&#112;&#108;&#101;&#46;c&#x6f;&#x6d;\">&#48;1&#46;&#48;&#48;&#x30;&#x5a;&#x26;&#x6c;i&#x6d;&#x69;&#116;=&#49;&#48;00&#48;&#38;o&#x66;&#x66;&#115;&#x65;t&#x3d;&#x30;&#38;&#97;&#x6e;&#111;&#110;=&#102;al&#115;&#101;&#38;&#97;p&#112;&#95;n&#97;&#109;&#101;=&#84;&#x65;&#x61;&#x74;&#65;p&#x70;&#38;&#x69;&#109;&#x70;&#x6c;&#x65;&#109;&#101;n&#x74;&#x65;&#x64;&#95;&#105;&#110;_&#118;&#x65;&#114;&#x73;i&#111;&#x6e;&#x3d;&#x76;&#x32;&#x2e;&#x31;&#x2e;&#x30;&#38;&#x76;&#101;&#114;&#x62;&#61;&#x50;&#x4f;&#83;&#x54;&#x26;&#x75;&#x73;&#101;&#x72;&#95;&#x69;&#100;&#61;&#99;7&#98;&#54;&#99;&#x62;&#52;&#55;-&#99;b9&#x36;-4&#52;&#52;&#49;&#45;&#56;80&#x31;&#45;&#51;&#53;&#98;&#x35;&#x37;&#52;&#x35;&#54;&#55;&#x35;&#x33;&#97;&#38;&#117;&#115;&#101;r_&#110;&#x61;&#109;e&#x3d;&#115;&#117;&#115;&#x61;&#110;&#46;&#x75;&#107;.29@&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_1_0_get_metrics(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: MetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv2_1_0_get_metrics_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv2_1_0_get_metrics_with_http_info(body, **kwargs)
            return data

    def o_b_pv2_1_0_get_metrics_with_http_info(self, body, **kwargs):
        """
        Get Metrics
        <p>Get the all metrics</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"ma&#105;&#x6c;&#116;&#x6f;&#x3a;&#x30;1&#46;&#48;&#x30;&#48;Z&#x26;&#108;&#x69;&#x6d;&#x69;t&#61;&#x31;&#x30;&#x30;&#x30;&#x30;&amp;o&#102;&#x66;&#x73;&#101;&#116;&#61;&#x30;&amp;&#x61;&#x6e;&#x6f;&#x6e;&#x3d;&#x66;&#x61;&#x6c;&#115;e&#x26;&#97;p&#x70;&#x5f;&#110;&#97;&#109;&#101;&#x3d;T&#101;&#97;&#116;&#65;&#112;&#112;&#38;i&#109;&#112;l&#x65;&#x6d;&#x65;&#x6e;te&#x64;&#95;&#x69;n&#95;&#x76;&#101;&#114;s&#x69;&#111;n&#61;&#118;2&#46;&#x31;&#46;&#48;&#38;&#118;&#x65;&#114;&#98;&#61;&#x50;O&#x53;&#84;&amp;&#x75;se&#x72;&#x5f;&#105;&#100;&#x3d;&#99;&#55;&#98;6&#x63;&#98;&#x34;7&#45;&#99;&#98;&#57;&#x36;&#45;4&#x34;&#x34;&#49;&#45;&#x38;&#56;01&#x2d;&#51;&#x35;&#98;&#x35;&#55;&#52;&#53;67&#x35;3&#x61;&#38;&#117;&#115;&#101;&#x72;&#x5f;&#110;&#97;me&#x3d;&#x73;&#x75;&#x73;&#x61;&#110;&#x2e;&#117;&#107;&#46;&#50;9&#x40;&#x65;x&#97;m&#112;&#108;&#101;&#46;c&#x6f;&#x6d;\">&#48;1&#46;&#48;&#48;&#x30;&#x5a;&#x26;&#x6c;i&#x6d;&#x69;&#116;=&#49;&#48;00&#48;&#38;o&#x66;&#x66;&#115;&#x65;t&#x3d;&#x30;&#38;&#97;&#x6e;&#111;&#110;=&#102;al&#115;&#101;&#38;&#97;p&#112;&#95;n&#97;&#109;&#101;=&#84;&#x65;&#x61;&#x74;&#65;p&#x70;&#38;&#x69;&#109;&#x70;&#x6c;&#x65;&#109;&#101;n&#x74;&#x65;&#x64;&#95;&#105;&#110;_&#118;&#x65;&#114;&#x73;i&#111;&#x6e;&#x3d;&#x76;&#x32;&#x2e;&#x31;&#x2e;&#x30;&#38;&#x76;&#101;&#114;&#x62;&#61;&#x50;&#x4f;&#83;&#x54;&#x26;&#x75;&#x73;&#101;&#x72;&#95;&#x69;&#100;&#61;&#99;7&#98;&#54;&#99;&#x62;&#52;&#55;-&#99;b9&#x36;-4&#52;&#52;&#49;&#45;&#56;80&#x31;&#45;&#51;&#53;&#98;&#x35;&#x37;&#52;&#x35;&#54;&#55;&#x35;&#x33;&#97;&#38;&#117;&#115;&#101;r_&#110;&#x61;&#109;e&#x3d;&#115;&#117;&#115;&#x61;&#110;&#46;&#x75;&#107;.29@&#101;&#120;&#x61;&#x6d;&#x70;&#108;&#101;&#x2e;&#x63;&#111;&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_1_0_get_metrics_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: MetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv2_1_0_get_metrics" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv2_1_0_get_metrics`")

        resource_path = '/obp/v5.0.0/management/metrics'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MetricsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv2_2_0_get_connector_metrics(self, body, **kwargs):
        """
        Get Connector Metrics
        <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_2_0_get_connector_metrics(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: ConnectorMetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv2_2_0_get_connector_metrics_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv2_2_0_get_connector_metrics_with_http_info(body, **kwargs)
            return data

    def o_b_pv2_2_0_get_connector_metrics_with_http_info(self, body, **kwargs):
        """
        Get Connector Metrics
        <p>Get the all metrics</p><p>require CanGetConnectorMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/connector/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 1000)  eg:limit=2000</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>eg: /management/connector/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=100&amp;offset=300</p><p>Other filters:</p><p>5 connector_name  (if null ignore)</p><p>6 function_name (if null ignore)</p><p>7 correlation_id (if null ignore)</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_2_0_get_connector_metrics_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: ConnectorMetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv2_2_0_get_connector_metrics" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv2_2_0_get_connector_metrics`")

        resource_path = '/obp/v5.0.0/management/connector/metrics'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ConnectorMetricsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv2_2_0_get_message_docs(self, body, **kwargs):
        """
        Get Message Docs
        <p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: kafka_vSept2018, stored_procedure_vDec2019 ...</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_2_0_get_message_docs(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: MessageDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv2_2_0_get_message_docs_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv2_2_0_get_message_docs_with_http_info(body, **kwargs)
            return data

    def o_b_pv2_2_0_get_message_docs_with_http_info(self, body, **kwargs):
        """
        Get Message Docs
        <p>These message docs provide example messages sent by OBP to the (Kafka) message queue for processing by the Core Banking / Payment system Adapter - together with an example expected response and possible error codes.<br />Integrators can use these messages to build Adapters that provide core banking services to OBP.</p><p>Note: API Explorer provides a Message Docs page where these messages are displayed.</p><p><code>CONNECTOR</code>: kafka_vSept2018, stored_procedure_vDec2019 ...</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv2_2_0_get_message_docs_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EmptyClassJson body: EmptyClassJson object that needs to be added. (required)
        :return: MessageDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv2_2_0_get_message_docs" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv2_2_0_get_message_docs`")

        resource_path = '/obp/v5.0.0/message-docs/CONNECTOR'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MessageDocsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_0_0_get_adapter_info_for_bank(self, bank_id, **kwargs):
        """
        Get Adapter Info for a bank
        <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_0_0_get_adapter_info_for_bank(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: AdapterInfoJsonV300
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_0_0_get_adapter_info_for_bank_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv3_0_0_get_adapter_info_for_bank_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv3_0_0_get_adapter_info_for_bank_with_http_info(self, bank_id, **kwargs):
        """
        Get Adapter Info for a bank
        <p>Get basic information about the Adapter listening on behalf of this bank.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_0_0_get_adapter_info_for_bank_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: AdapterInfoJsonV300
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_0_0_get_adapter_info_for_bank" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv3_0_0_get_adapter_info_for_bank`")

        resource_path = '/obp/v5.0.0/banks/{BANK_ID}/adapter'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='AdapterInfoJsonV300',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_config(self, **kwargs):
        """
        Get API Configuration
        <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_config(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: ConfigurationJSON
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_config_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_config_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_config_with_http_info(self, **kwargs):
        """
        Get API Configuration
        <p>Returns information about:</p><ul><li>The default bank_id</li><li>Akka configuration</li><li>Elastic Search configuration</li><li>Cached functions</li></ul><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_config_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: ConfigurationJSON
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_config" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/config'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ConfigurationJSON',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_create_method_routing(self, body, **kwargs):
        """
        Create MethodRouting
        <p>Create a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_create_method_routing(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param MethodRoutingCommons body: MethodRoutingCommons object that needs to be added. (required)
        :return: MethodRoutingCommons
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_create_method_routing_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv3_1_0_create_method_routing_with_http_info(body, **kwargs)
            return data

    def o_b_pv3_1_0_create_method_routing_with_http_info(self, body, **kwargs):
        """
        Create MethodRouting
        <p>Create a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explanation of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some parameters for this method</li></ul><p>note and CAVEAT!:</p><ul><li>bank_id_pattern has to be empty for methods that do not take bank_id as a function parameter, otherwise might get empty result</li><li>methods that aggregate bank objects (e.g. getBankAccountsForUser) have to take any  existing method routings for these objects into consideration</li><li>so if you create e.g. a bank specific method routing for getting an account, make sure that it is also served by endpoints getting ALL accounts for ALL banks</li><li>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</li></ul><p>If the connector name starts with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_create_method_routing_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param MethodRoutingCommons body: MethodRoutingCommons object that needs to be added. (required)
        :return: MethodRoutingCommons
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_create_method_routing" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv3_1_0_create_method_routing`")

        resource_path = '/obp/v5.0.0/management/method_routings'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MethodRoutingCommons',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_delete_method_routing(self, method_routing_id, **kwargs):
        """
        Delete MethodRouting
        <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_delete_method_routing(method_routing_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str method_routing_id: the method routing id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_delete_method_routing_with_http_info(method_routing_id, **kwargs)
        else:
            (data) = self.o_b_pv3_1_0_delete_method_routing_with_http_info(method_routing_id, **kwargs)
            return data

    def o_b_pv3_1_0_delete_method_routing_with_http_info(self, method_routing_id, **kwargs):
        """
        Delete MethodRouting
        <p>Delete a MethodRouting specified by METHOD_ROUTING_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_delete_method_routing_with_http_info(method_routing_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str method_routing_id: the method routing id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['method_routing_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_delete_method_routing" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'method_routing_id' is set
        if ('method_routing_id' not in params) or (params['method_routing_id'] is None):
            raise ValueError("Missing the required parameter `method_routing_id` when calling `o_b_pv3_1_0_delete_method_routing`")

        resource_path = '/obp/v5.0.0/management/method_routings/{METHOD_ROUTING_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'method_routing_id' in params:
            path_params['METHOD_ROUTING_ID'] = params['method_routing_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_message_docs_swagger(self, **kwargs):
        """
        Get Message Docs Swagger
        <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_message_docs_swagger(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: MessageDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_message_docs_swagger_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_message_docs_swagger_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_message_docs_swagger_with_http_info(self, **kwargs):
        """
        Get Message Docs Swagger
        <p>This endpoint provides example message docs in swagger format.<br />It is only relavent for REST Connectors.</p><p>This endpoint can be used by the developer building a REST Adapter that connects to the Core Banking System (CBS).<br />That is, the Adapter developer can use the Swagger surfaced here to build the REST APIs that the OBP REST connector will call to consume CBS services.</p><p>i.e.:</p><p>OBP API (Core OBP API code) -&gt; OBP REST Connector (OBP REST Connector code) -&gt; OBP REST Adapter (Adapter developer code) -&gt; CBS (Main Frame)</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_message_docs_swagger_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: MessageDocsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_message_docs_swagger" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/message-docs/CONNECTOR/swagger2.0'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MessageDocsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_method_routings(self, **kwargs):
        """
        Get MethodRoutings
        <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_method_routings(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2009
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_method_routings_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_method_routings_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_method_routings_with_http_info(self, **kwargs):
        """
        Get MethodRoutings
        <p>Get the all MethodRoutings.</p><p>Query url parameters:</p><ul><li>method_name: filter with method_name</li><li>active: if active = true, it will show all the webui_ props. Even if they are set yet, we will return all the default webui_ props</li></ul><p>eg:<br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?active=true</a><br /><a href=\"https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank\">https://test.openbankproject.com/obp/v3.1.0/management/method_routings?method_name=getBank</a></p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_method_routings_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2009
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_method_routings" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/method_routings'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2009',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is(self, **kwargs):
        """
        Get JSON Web Key (JWK) URIs
        <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: OAuth2ServerJwksUrisJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is_with_http_info(self, **kwargs):
        """
        Get JSON Web Key (JWK) URIs
        <p>Get the OAuth2 server's public JSON Web Key (JWK) URIs.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: OAuth2ServerJwksUrisJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_o_auth2_server_jw_ks_ur_is" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/jwks-uris'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='OAuth2ServerJwksUrisJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_obp_connector_loopback(self, **kwargs):
        """
        Get Connector Status (Loopback)
        <p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p><p>In the future, this endpoint may also return information about database connections etc.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_obp_connector_loopback(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: ObpApiLoopbackJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_obp_connector_loopback_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_obp_connector_loopback_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_obp_connector_loopback_with_http_info(self, **kwargs):
        """
        Get Connector Status (Loopback)
        <p>This endpoint makes a call to the Connector to check the backend transport (e.g. Kafka) is reachable.</p><p>Currently this is only implemented for Kafka based connectors.</p><p>For Kafka based connectors, this endpoint writes a message to Kafka and reads it again.</p><p>In the future, this endpoint may also return information about database connections etc.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_obp_connector_loopback_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: ObpApiLoopbackJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_obp_connector_loopback" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/connector/loopback'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='ObpApiLoopbackJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_rate_limiting_info(self, **kwargs):
        """
        Get Rate Limiting Info
        <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_rate_limiting_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: RateLimitingInfoV310
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_rate_limiting_info_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_rate_limiting_info_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_rate_limiting_info_with_http_info(self, **kwargs):
        """
        Get Rate Limiting Info
        <p>Get information about the Rate Limiting setup on this OBP Instance such as:</p><p>Is rate limiting enabled and active?<br />What backend is used to keep track of the API calls (e.g. REDIS).</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_rate_limiting_info_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: RateLimitingInfoV310
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_rate_limiting_info" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/rate-limiting'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='RateLimitingInfoV310',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_get_server_jwk(self, **kwargs):
        """
        Get JSON Web Key (JWK)
        <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_server_jwk(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: SeverJWK
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_get_server_jwk_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv3_1_0_get_server_jwk_with_http_info(**kwargs)
            return data

    def o_b_pv3_1_0_get_server_jwk_with_http_info(self, **kwargs):
        """
        Get JSON Web Key (JWK)
        <p>Get the server's public JSON Web Key (JWK) set and certificate chain.<br />It is required by client applications to validate ID tokens, self-contained access tokens and other issued objects.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_get_server_jwk_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: SeverJWK
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_get_server_jwk" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/certs'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='SeverJWK',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv3_1_0_update_method_routing(self, body, method_routing_id, **kwargs):
        """
        Update MethodRouting
        <p>Update a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_update_method_routing(body, method_routing_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param MethodRoutingCommons body: MethodRoutingCommons object that needs to be added. (required)
        :param str method_routing_id: the method routing id  (required)
        :return: MethodRoutingCommons
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv3_1_0_update_method_routing_with_http_info(body, method_routing_id, **kwargs)
        else:
            (data) = self.o_b_pv3_1_0_update_method_routing_with_http_info(body, method_routing_id, **kwargs)
            return data

    def o_b_pv3_1_0_update_method_routing_with_http_info(self, body, method_routing_id, **kwargs):
        """
        Update MethodRouting
        <p>Update a MethodRouting.</p><p>Authentication is Mandatory</p><p>Explaination of Fields:</p><ul><li>method_name is required String value, current supported value: [mapped | internal | rest_vMar2019]</li><li>connector_name is required String value</li><li>is_bank_id_exact_match is required boolean value, if bank_id_pattern is exact bank_id value, this value is true; if bank_id_pattern is null or a regex, this value is false</li><li>bank_id_pattern is optional String value, it can be null, a exact bank_id or a regex</li><li>parameters is optional array of key value pairs. You can set some paremeters for this method<br />note:</li><li><p>if bank_id_pattern is regex, special characters need to do escape, for example: bank_id_pattern = &quot;some-id_pattern_\\d+&quot;</p></li></ul><p>If connector name start with rest, parameters can contain &quot;outBoundMapping&quot; and &quot;inBoundMapping&quot;, to convert OutBound and InBound json structure.<br />for example:<br />outBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248007-33332e00-580e-11ea-8d2a-d1856035fa24.png\" alt=\"Snipaste_outBoundMapping\" /><br />Build OutBound json value rules:<br />1 set cId value with: outboundAdapterCallContext.correlationId value<br />2 set bankId value with: concat bankId.value value with  string helloworld<br />3 set originalJson value with: whole source json, note: the field value expression is $root</p><p>inBoundMapping example, convert json from source to target:<br /><img src=\"https://user-images.githubusercontent.com/2577334/75248199-a9d02b80-580e-11ea-9238-e073264e9170.png\" alt=\"inBoundMapping\" /><br />Build InBound json value rules:<br />1 and 2 set inboundAdapterCallContext and status value: because field name ends with &quot;$default&quot;, remove &quot;$default&quot; from field name, not change the value<br />3 set fullName value with: concat string full: with result.name value<br />4 set bankRoutingScheme value: because source value is Array, but target value is not Array, the mapping field name must ends with [0].</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv3_1_0_update_method_routing_with_http_info(body, method_routing_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param MethodRoutingCommons body: MethodRoutingCommons object that needs to be added. (required)
        :param str method_routing_id: the method routing id  (required)
        :return: MethodRoutingCommons
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'method_routing_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv3_1_0_update_method_routing" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv3_1_0_update_method_routing`")
        # verify the required parameter 'method_routing_id' is set
        if ('method_routing_id' not in params) or (params['method_routing_id'] is None):
            raise ValueError("Missing the required parameter `method_routing_id` when calling `o_b_pv3_1_0_update_method_routing`")

        resource_path = '/obp/v5.0.0/management/method_routings/{METHOD_ROUTING_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'method_routing_id' in params:
            path_params['METHOD_ROUTING_ID'] = params['method_routing_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MethodRoutingCommons',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_bank_level_dynamic_endpoint(self, body, bank_id, **kwargs):
        """
        Create Bank Level Dynamic Endpoint
        <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_dynamic_endpoint(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param Body body: JObject object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_bank_level_dynamic_endpoint_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_bank_level_dynamic_endpoint_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_create_bank_level_dynamic_endpoint_with_http_info(self, body, bank_id, **kwargs):
        """
        Create Bank Level Dynamic Endpoint
        <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_dynamic_endpoint_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param Body body: JObject object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_bank_level_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_bank_level_dynamic_endpoint`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_create_bank_level_dynamic_endpoint`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-endpoints'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003DynamicEndpoints',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_bank_level_dynamic_entity(self, body, bank_id, **kwargs):
        """
        Create Bank Level Dynamic Entity
        <p>Create a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;branchId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;atmId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;productCode=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;cardId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&amp;transactionId=c9ee5dab-7517-4f80-ae47-f7d373c74fb9&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&amp;counterpartyId=c9ee5dab-7517-4f80-ae47-f7d373c74fb9&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_dynamic_entity(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_bank_level_dynamic_entity_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_bank_level_dynamic_entity_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_create_bank_level_dynamic_entity_with_http_info(self, body, bank_id, **kwargs):
        """
        Create Bank Level Dynamic Entity
        <p>Create a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;2e179434-bdcd-42c9-b65c-5536c2c46daa&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;branchId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;atmId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;productCode=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;cardId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&amp;transactionId=c9ee5dab-7517-4f80-ae47-f7d373c74fb9&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=2e179434-bdcd-42c9-b65c-5536c2c46daa&amp;accountId=dd2cb08f-0dd8-4f19-8e65-77ff0ffd5930&amp;counterpartyId=c9ee5dab-7517-4f80-ae47-f7d373c74fb9&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_dynamic_entity_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_bank_level_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_bank_level_dynamic_entity`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_create_bank_level_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-entities'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEntityFooBar',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_bank_level_endpoint_tag(self, body, bank_id, **kwargs):
        """
        Create Bank Level Endpoint Tag
        <p>Create Bank Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_endpoint_tag(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_bank_level_endpoint_tag_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_bank_level_endpoint_tag_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_create_bank_level_endpoint_tag_with_http_info(self, body, bank_id, **kwargs):
        """
        Create Bank Level Endpoint Tag
        <p>Create Bank Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_endpoint_tag_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_bank_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_bank_level_endpoint_tag`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_create_bank_level_endpoint_tag`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_bank_level_endpoint_tag_0(self, body, bank_id, **kwargs):
        """
        Create Bank Level Endpoint Tag
        <p>Create Bank Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_endpoint_tag_0(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_bank_level_endpoint_tag_0_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_bank_level_endpoint_tag_0_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_create_bank_level_endpoint_tag_0_with_http_info(self, body, bank_id, **kwargs):
        """
        Create Bank Level Endpoint Tag
        <p>Create Bank Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_bank_level_endpoint_tag_0_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_bank_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_bank_level_endpoint_tag_0`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_create_bank_level_endpoint_tag_0`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_dynamic_endpoint(self, body, **kwargs):
        """
        Create Dynamic Endpoint
        <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_dynamic_endpoint(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param Body3 body: JObject object that needs to be added. (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_dynamic_endpoint_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_dynamic_endpoint_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_create_dynamic_endpoint_with_http_info(self, body, **kwargs):
        """
        Create Dynamic Endpoint
        <p>Create dynamic endpoints.</p><p>Create dynamic endpoints with one json format swagger content.</p><p>If the host of swagger is <code>dynamic_entity</code>, then you need link the swagger fields to the dynamic entity fields,<br />please check <code>Endpoint Mapping</code> endpoints.</p><p>If the host of swagger is <code>obp_mock</code>, every dynamic endpoint will return example response of swagger,</p><p>when create MethodRouting for given dynamic endpoint, it will be routed to given url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_dynamic_endpoint_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param Body3 body: JObject object that needs to be added. (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_dynamic_endpoint`")

        resource_path = '/obp/v5.0.0/management/dynamic-endpoints'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003DynamicEndpoints',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_system_dynamic_entity(self, body, **kwargs):
        """
        Create System Level Dynamic Entity
        <p>Create a system level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;branchId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;atmId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;productCode=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;cardId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&amp;transactionId=4fdb4f2a-2e65-4be8-afeb-bc85146fde8f&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&amp;counterpartyId=4fdb4f2a-2e65-4be8-afeb-bc85146fde8f&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_dynamic_entity(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_system_dynamic_entity_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_system_dynamic_entity_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_create_system_dynamic_entity_with_http_info(self, body, **kwargs):
        """
        Create System Level Dynamic Entity
        <p>Create a system level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Create a DynamicEntity. If creation is successful, the corresponding POST, GET, PUT and DELETE (Create, Read, Update, Delete or CRUD for short) endpoints will be generated automatically</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>The DATE_WITH_DAY format is: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />See the following list of currently available reference types and examples of how to construct key values correctly. Note: As more Dynamic Entities are created on this instance, this list will grow:</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;8fea25a5-946d-4985-a60b-ce98915e2bb9&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;branchId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;atmId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;productCode=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;cardId=a8ff1e0f-7355-4120-b809-3e120381ab6c&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&amp;transactionId=4fdb4f2a-2e65-4be8-afeb-bc85146fde8f&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=8fea25a5-946d-4985-a60b-ce98915e2bb9&amp;accountId=a8ff1e0f-7355-4120-b809-3e120381ab6c&amp;counterpartyId=4fdb4f2a-2e65-4be8-afeb-bc85146fde8f&quot;}</code></pre><p>Note: if you set <code>hasPersonalEntity</code> = false, then OBP will not generate the CRUD my FooBar endpoints.</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_dynamic_entity_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_system_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_system_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/system-dynamic-entities'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEntityFooBar',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_system_level_endpoint_tag(self, body, **kwargs):
        """
        Create System Level Endpoint Tag
        <p>Create System Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_level_endpoint_tag(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_system_level_endpoint_tag_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_system_level_endpoint_tag_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_create_system_level_endpoint_tag_with_http_info(self, body, **kwargs):
        """
        Create System Level Endpoint Tag
        <p>Create System Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_level_endpoint_tag_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_system_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_system_level_endpoint_tag`")

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_create_system_level_endpoint_tag_0(self, body, **kwargs):
        """
        Create System Level Endpoint Tag
        <p>Create System Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_level_endpoint_tag_0(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_create_system_level_endpoint_tag_0_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_create_system_level_endpoint_tag_0_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_create_system_level_endpoint_tag_0_with_http_info(self, body, **kwargs):
        """
        Create System Level Endpoint Tag
        <p>Create System Level Endpoint Tag</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_create_system_level_endpoint_tag_0_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_create_system_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_create_system_level_endpoint_tag_0`")

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'POST',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_bank_level_dynamic_endpoint(self, bank_id, **kwargs):
        """
         Delete Bank Level Dynamic Endpoint
        <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_dynamic_endpoint(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_bank_level_dynamic_endpoint_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_bank_level_dynamic_endpoint_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_bank_level_dynamic_endpoint_with_http_info(self, bank_id, **kwargs):
        """
         Delete Bank Level Dynamic Endpoint
        <p>Delete a Bank Level DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_dynamic_endpoint_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_bank_level_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_delete_bank_level_dynamic_endpoint`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_bank_level_dynamic_entity(self, dynamic_entity_id, bank_id, **kwargs):
        """
        Delete Bank Level Dynamic Entity
        <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_dynamic_entity(dynamic_entity_id, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :param str bank_id: The bank id (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_bank_level_dynamic_entity_with_http_info(dynamic_entity_id, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_bank_level_dynamic_entity_with_http_info(dynamic_entity_id, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_bank_level_dynamic_entity_with_http_info(self, dynamic_entity_id, bank_id, **kwargs):
        """
        Delete Bank Level Dynamic Entity
        <p>Delete a Bank Level DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_dynamic_entity_with_http_info(dynamic_entity_id, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :param str bank_id: The bank id (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['dynamic_entity_id', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_bank_level_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_delete_bank_level_dynamic_entity`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_delete_bank_level_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_bank_level_endpoint_tag(self, bank_id, **kwargs):
        """
        Delete Bank Level Endpoint Tag
        <p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_endpoint_tag(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_bank_level_endpoint_tag_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_bank_level_endpoint_tag_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_bank_level_endpoint_tag_with_http_info(self, bank_id, **kwargs):
        """
        Delete Bank Level Endpoint Tag
        <p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_endpoint_tag_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_bank_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_delete_bank_level_endpoint_tag`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Full',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_bank_level_endpoint_tag_0(self, bank_id, **kwargs):
        """
        Delete Bank Level Endpoint Tag
        <p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_endpoint_tag_0(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_bank_level_endpoint_tag_0_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_bank_level_endpoint_tag_0_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_bank_level_endpoint_tag_0_with_http_info(self, bank_id, **kwargs):
        """
        Delete Bank Level Endpoint Tag
        <p>Delete Bank Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_bank_level_endpoint_tag_0_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_bank_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_delete_bank_level_endpoint_tag_0`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Full',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_dynamic_endpoint(self, **kwargs):
        """
         Delete Dynamic Endpoint
        <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_dynamic_endpoint(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_dynamic_endpoint_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_dynamic_endpoint_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_delete_dynamic_endpoint_with_http_info(self, **kwargs):
        """
         Delete Dynamic Endpoint
        <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_dynamic_endpoint_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_my_dynamic_endpoint(self, **kwargs):
        """
        Delete My Dynamic Endpoint
        <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_my_dynamic_endpoint(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_my_dynamic_endpoint_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_my_dynamic_endpoint_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_delete_my_dynamic_endpoint_with_http_info(self, **kwargs):
        """
        Delete My Dynamic Endpoint
        <p>Delete a DynamicEndpoint specified by DYNAMIC_ENDPOINT_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_my_dynamic_endpoint_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_my_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/my/dynamic-endpoints/DYNAMIC_ENDPOINT_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_my_dynamic_entity(self, dynamic_entity_id, **kwargs):
        """
        Delete My Dynamic Entity
        <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_my_dynamic_entity(dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_my_dynamic_entity_with_http_info(dynamic_entity_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_my_dynamic_entity_with_http_info(dynamic_entity_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_my_dynamic_entity_with_http_info(self, dynamic_entity_id, **kwargs):
        """
        Delete My Dynamic Entity
        <p>Delete my DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_my_dynamic_entity_with_http_info(dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['dynamic_entity_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_my_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_delete_my_dynamic_entity`")

        resource_path = '/obp/v5.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_system_dynamic_entity(self, dynamic_entity_id, **kwargs):
        """
        Delete System Level Dynamic Entity
        <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_dynamic_entity(dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_system_dynamic_entity_with_http_info(dynamic_entity_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_system_dynamic_entity_with_http_info(dynamic_entity_id, **kwargs)
            return data

    def o_b_pv4_0_0_delete_system_dynamic_entity_with_http_info(self, dynamic_entity_id, **kwargs):
        """
        Delete System Level Dynamic Entity
        <p>Delete a DynamicEntity specified by DYNAMIC_ENTITY_ID.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_dynamic_entity_with_http_info(dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['dynamic_entity_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_system_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_delete_system_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_system_level_endpoint_tag(self, **kwargs):
        """
        Delete System Level Endpoint Tag
        <p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_level_endpoint_tag(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_system_level_endpoint_tag_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_system_level_endpoint_tag_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_delete_system_level_endpoint_tag_with_http_info(self, **kwargs):
        """
        Delete System Level Endpoint Tag
        <p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_level_endpoint_tag_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_system_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Full',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_delete_system_level_endpoint_tag_0(self, **kwargs):
        """
        Delete System Level Endpoint Tag
        <p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_level_endpoint_tag_0(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_delete_system_level_endpoint_tag_0_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_delete_system_level_endpoint_tag_0_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_delete_system_level_endpoint_tag_0_with_http_info(self, **kwargs):
        """
        Delete System Level Endpoint Tag
        <p>Delete System Level Endpoint Tag.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_delete_system_level_endpoint_tag_0_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Full
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_delete_system_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'DELETE',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Full',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_bank_level_dynamic_endpoint(self, bank_id, **kwargs):
        """
         Get Bank Level Dynamic Endpoint
        <p>Get a Bank Level Dynamic Endpoint.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_endpoint(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_bank_level_dynamic_endpoint_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_bank_level_dynamic_endpoint_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_get_bank_level_dynamic_endpoint_with_http_info(self, bank_id, **kwargs):
        """
         Get Bank Level Dynamic Endpoint
        <p>Get a Bank Level Dynamic Endpoint.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_endpoint_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_bank_level_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_get_bank_level_dynamic_endpoint`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003DynamicEndpoints',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_bank_level_dynamic_endpoints(self, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Endpoints
        <p>Get Bank Level Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_endpoints(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_bank_level_dynamic_endpoints_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_bank_level_dynamic_endpoints_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_get_bank_level_dynamic_endpoints_with_http_info(self, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Endpoints
        <p>Get Bank Level Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_endpoints_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_bank_level_dynamic_endpoints" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_get_bank_level_dynamic_endpoints`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-endpoints'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_bank_level_dynamic_entities(self, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Entities
        <p>Get all the bank level Dynamic Entities for one bank.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_entities(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_bank_level_dynamic_entities_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_bank_level_dynamic_entities_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_get_bank_level_dynamic_entities_with_http_info(self, bank_id, **kwargs):
        """
        Get Bank Level Dynamic Entities
        <p>Get all the bank level Dynamic Entities for one bank.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_dynamic_entities_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_bank_level_dynamic_entities" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_get_bank_level_dynamic_entities`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-entities'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2004',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_bank_level_endpoint_tags(self, bank_id, **kwargs):
        """
        Get Bank Level Endpoint Tags
        <p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_endpoint_tags(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_bank_level_endpoint_tags_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_bank_level_endpoint_tags_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_get_bank_level_endpoint_tags_with_http_info(self, bank_id, **kwargs):
        """
        Get Bank Level Endpoint Tags
        <p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_endpoint_tags_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_bank_level_endpoint_tags" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_get_bank_level_endpoint_tags`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Coloncolon',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_bank_level_endpoint_tags_0(self, bank_id, **kwargs):
        """
        Get Bank Level Endpoint Tags
        <p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_endpoint_tags_0(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_bank_level_endpoint_tags_0_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_bank_level_endpoint_tags_0_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_get_bank_level_endpoint_tags_0_with_http_info(self, bank_id, **kwargs):
        """
        Get Bank Level Endpoint Tags
        <p>Get Bank Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_bank_level_endpoint_tags_0_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_bank_level_endpoint_tags_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_get_bank_level_endpoint_tags_0`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Coloncolon',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_call_context(self, **kwargs):
        """
        Get the Call Context of a current call
        <p>Get the Call Context of the current call.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_call_context(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_call_context_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_call_context_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_call_context_with_http_info(self, **kwargs):
        """
        Get the Call Context of a current call
        <p>Get the Call Context of the current call.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_call_context_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_call_context" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/development/call_context'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_dynamic_endpoint(self, **kwargs):
        """
        Get Dynamic Endpoint
        <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_dynamic_endpoint(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_dynamic_endpoint_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_dynamic_endpoint_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_dynamic_endpoint_with_http_info(self, **kwargs):
        """
        Get Dynamic Endpoint
        <p>Get a Dynamic Endpoint.</p><p>Get one DynamicEndpoint,</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_dynamic_endpoint_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003DynamicEndpoints
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_dynamic_endpoint" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003DynamicEndpoints',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_dynamic_endpoints(self, **kwargs):
        """
         Get Dynamic Endpoints
        <p>Get Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_dynamic_endpoints(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_dynamic_endpoints_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_dynamic_endpoints_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_dynamic_endpoints_with_http_info(self, **kwargs):
        """
         Get Dynamic Endpoints
        <p>Get Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_dynamic_endpoints_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_dynamic_endpoints" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/dynamic-endpoints'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_mapper_database_info(self, **kwargs):
        """
        Get Mapper Database Info
        <p>Get basic information about the Mapper Database.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_mapper_database_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: AdapterInfoJsonV300
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_mapper_database_info_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_mapper_database_info_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_mapper_database_info_with_http_info(self, **kwargs):
        """
        Get Mapper Database Info
        <p>Get basic information about the Mapper Database.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_mapper_database_info_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: AdapterInfoJsonV300
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_mapper_database_info" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/database/info'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='AdapterInfoJsonV300',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_my_dynamic_endpoints(self, **kwargs):
        """
        Get My Dynamic Endpoints
        <p>Get My Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_my_dynamic_endpoints(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_my_dynamic_endpoints_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_my_dynamic_endpoints_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_my_dynamic_endpoints_with_http_info(self, **kwargs):
        """
        Get My Dynamic Endpoints
        <p>Get My Dynamic Endpoints.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_my_dynamic_endpoints_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2003
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_my_dynamic_endpoints" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/my/dynamic-endpoints'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2003',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_my_dynamic_entities(self, **kwargs):
        """
        Get My Dynamic Entities
        <p>Get all my Dynamic Entities.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_my_dynamic_entities(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_my_dynamic_entities_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_my_dynamic_entities_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_my_dynamic_entities_with_http_info(self, **kwargs):
        """
        Get My Dynamic Entities
        <p>Get all my Dynamic Entities.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_my_dynamic_entities_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_my_dynamic_entities" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/my/dynamic-entities'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2004',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_scanned_api_versions(self, **kwargs):
        """
        Get scanned API Versions
        <p>Get all the scanned API Versions.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_scanned_api_versions(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse200
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_scanned_api_versions_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_scanned_api_versions_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_scanned_api_versions_with_http_info(self, **kwargs):
        """
        Get scanned API Versions
        <p>Get all the scanned API Versions.</p><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_scanned_api_versions_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse200
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_scanned_api_versions" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/api/versions'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse200',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_system_dynamic_entities(self, **kwargs):
        """
        Get System Dynamic Entities
        <p>Get all System Dynamic Entities</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_dynamic_entities(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_system_dynamic_entities_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_system_dynamic_entities_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_system_dynamic_entities_with_http_info(self, **kwargs):
        """
        Get System Dynamic Entities
        <p>Get all System Dynamic Entities</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_dynamic_entities_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: InlineResponse2004
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_system_dynamic_entities" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/system-dynamic-entities'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='InlineResponse2004',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_system_level_endpoint_tags(self, **kwargs):
        """
        Get System Level Endpoint Tags
        <p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_level_endpoint_tags(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_system_level_endpoint_tags_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_system_level_endpoint_tags_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_system_level_endpoint_tags_with_http_info(self, **kwargs):
        """
        Get System Level Endpoint Tags
        <p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_level_endpoint_tags_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_system_level_endpoint_tags" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Coloncolon',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_get_system_level_endpoint_tags_0(self, **kwargs):
        """
        Get System Level Endpoint Tags
        <p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_level_endpoint_tags_0(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_get_system_level_endpoint_tags_0_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_get_system_level_endpoint_tags_0_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_get_system_level_endpoint_tags_0_with_http_info(self, **kwargs):
        """
        Get System Level Endpoint Tags
        <p>Get System Level Endpoint Tags.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_get_system_level_endpoint_tags_0_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: Coloncolon
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_get_system_level_endpoint_tags_0" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='Coloncolon',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_root(self, **kwargs):
        """
        Get API Info (root)
        <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_root(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: APIInfoJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_root_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_root_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_root_with_http_info(self, **kwargs):
        """
        Get API Info (root)
        <p>Returns information about:</p><ul><li>API version</li><li>Hosted by information</li><li>Hosted at information</li><li>Energy source information</li><li>Git Commit</li></ul><p>Authentication is Optional</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_root_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: APIInfoJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_root" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/root'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='APIInfoJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host(self, body, bank_id, **kwargs):
        """
         Update Bank Level Dynamic Endpoint Host
        <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEndpointHostJson400 body: DynamicEndpointHostJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEndpointHostJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host_with_http_info(self, body, bank_id, **kwargs):
        """
         Update Bank Level Dynamic Endpoint Host
        <p>Update Bank Level  dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEndpointHostJson400 body: DynamicEndpointHostJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEndpointHostJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_update_bank_level_dynamic_endpoint_host`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEndpointHostJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_bank_level_dynamic_entity(self, body, dynamic_entity_id, bank_id, **kwargs):
        """
        Update Bank Level Dynamic Entity
        <p>Update a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;branchId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;atmId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;productCode=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;cardId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&amp;transactionId=57a9b104-5d32-4f0e-99f0-016f7afb6de2&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&amp;counterpartyId=57a9b104-5d32-4f0e-99f0-016f7afb6de2&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_dynamic_entity(body, dynamic_entity_id, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_bank_level_dynamic_entity_with_http_info(body, dynamic_entity_id, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_bank_level_dynamic_entity_with_http_info(body, dynamic_entity_id, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_bank_level_dynamic_entity_with_http_info(self, body, dynamic_entity_id, bank_id, **kwargs):
        """
        Update Bank Level Dynamic Entity
        <p>Update a Bank Level DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;branchId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;atmId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;productCode=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;cardId=e6596228-f207-4872-81fd-1682ba6b8ef6&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&amp;transactionId=57a9b104-5d32-4f0e-99f0-016f7afb6de2&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=746456cf-6c71-4d7e-82e7-7a4b3b48cf5d&amp;accountId=e6596228-f207-4872-81fd-1682ba6b8ef6&amp;counterpartyId=57a9b104-5d32-4f0e-99f0-016f7afb6de2&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_dynamic_entity_with_http_info(body, dynamic_entity_id, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :param str bank_id: The bank id (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'dynamic_entity_id', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_bank_level_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_bank_level_dynamic_entity`")
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_update_bank_level_dynamic_entity`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_update_bank_level_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEntityFooBar',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_bank_level_endpoint_tag(self, body, bank_id, **kwargs):
        """
        Update Bank Level Endpoint Tag
        <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_endpoint_tag(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_bank_level_endpoint_tag_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_bank_level_endpoint_tag_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_bank_level_endpoint_tag_with_http_info(self, body, bank_id, **kwargs):
        """
        Update Bank Level Endpoint Tag
        <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_endpoint_tag_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_bank_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_bank_level_endpoint_tag`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_update_bank_level_endpoint_tag`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_bank_level_endpoint_tag_0(self, body, bank_id, **kwargs):
        """
        Update Bank Level Endpoint Tag
        <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_endpoint_tag_0(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_bank_level_endpoint_tag_0_with_http_info(body, bank_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_bank_level_endpoint_tag_0_with_http_info(body, bank_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_bank_level_endpoint_tag_0_with_http_info(self, body, bank_id, **kwargs):
        """
        Update Bank Level Endpoint Tag
        <p>Update Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_bank_level_endpoint_tag_0_with_http_info(body, bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :param str bank_id: The bank id (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_bank_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_bank_level_endpoint_tag_0`")
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv4_0_0_update_bank_level_endpoint_tag_0`")

        resource_path = '/obp/v5.0.0/management/banks/{BANK_ID}/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_dynamic_endpoint_host(self, body, **kwargs):
        """
         Update Dynamic Endpoint Host
        <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_dynamic_endpoint_host(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEndpointHostJson400 body: DynamicEndpointHostJson400 object that needs to be added. (required)
        :return: DynamicEndpointHostJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_dynamic_endpoint_host_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_dynamic_endpoint_host_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_update_dynamic_endpoint_host_with_http_info(self, body, **kwargs):
        """
         Update Dynamic Endpoint Host
        <p>Update dynamic endpoint Host.<br />The value can be obp_mock, dynamic_entity, or some service url.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_dynamic_endpoint_host_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEndpointHostJson400 body: DynamicEndpointHostJson400 object that needs to be added. (required)
        :return: DynamicEndpointHostJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_dynamic_endpoint_host" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_dynamic_endpoint_host`")

        resource_path = '/obp/v5.0.0/management/dynamic-endpoints/DYNAMIC_ENDPOINT_ID/host'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEndpointHostJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_my_dynamic_entity(self, body, dynamic_entity_id, **kwargs):
        """
        Update My Dynamic Entity
        <p>Update my DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;branchId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;atmId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;productCode=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;cardId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&amp;transactionId=b5091b10-7b59-4d56-b7d8-c03e9a50138b&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&amp;counterpartyId=b5091b10-7b59-4d56-b7d8-c03e9a50138b&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_my_dynamic_entity(body, dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_my_dynamic_entity_with_http_info(body, dynamic_entity_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_my_dynamic_entity_with_http_info(body, dynamic_entity_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_my_dynamic_entity_with_http_info(self, body, dynamic_entity_id, **kwargs):
        """
        Update My Dynamic Entity
        <p>Update my DynamicEntity.</p><p>Authentication is Mandatory</p><p>Update one of my DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>Current support filed types as follow:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;c26d9bb3-0869-4982-92f4-e6c364beaa2e&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;branchId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;atmId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;productCode=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;cardId=74000d81-09b3-44a3-b72d-d9b527b5c215&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&amp;transactionId=b5091b10-7b59-4d56-b7d8-c03e9a50138b&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=c26d9bb3-0869-4982-92f4-e6c364beaa2e&amp;accountId=74000d81-09b3-44a3-b72d-d9b527b5c215&amp;counterpartyId=b5091b10-7b59-4d56-b7d8-c03e9a50138b&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_my_dynamic_entity_with_http_info(body, dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'dynamic_entity_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_my_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_my_dynamic_entity`")
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_update_my_dynamic_entity`")

        resource_path = '/obp/v5.0.0/my/dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEntityFooBar',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_system_dynamic_entity(self, body, dynamic_entity_id, **kwargs):
        """
        Update System Level Dynamic Entity
        <p>Update a System Level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;branchId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;atmId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;productCode=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;cardId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&amp;transactionId=462ec703-3df6-43a0-a88f-7219e4c020c1&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&amp;counterpartyId=462ec703-3df6-43a0-a88f-7219e4c020c1&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_dynamic_entity(body, dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_system_dynamic_entity_with_http_info(body, dynamic_entity_id, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_system_dynamic_entity_with_http_info(body, dynamic_entity_id, **kwargs)
            return data

    def o_b_pv4_0_0_update_system_dynamic_entity_with_http_info(self, body, dynamic_entity_id, **kwargs):
        """
        Update System Level Dynamic Entity
        <p>Update a System Level Dynamic Entity.</p><p>Authentication is Mandatory</p><p>Update one DynamicEntity, after update finished, the corresponding CRUD endpoints will be changed.</p><p>The following field types are as supported:<br />[number, integer, boolean, string, DATE_WITH_DAY, reference]</p><p>DATE_WITH_DAY format: yyyy-MM-dd</p><p>Reference types are like foreign keys and composite foreign keys are supported. The value you need to supply as the (composite) foreign key is a UUID (or several UUIDs in the case of a composite key) that match value in another Entity..<br />The following list shows all the possible reference types in the system with corresponding examples values so you can see how to construct each reference type value.</p><pre><code>&quot;someField0&quot;: {    &quot;type&quot;: &quot;reference:Bank&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField1&quot;: {    &quot;type&quot;: &quot;reference:Consumer&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField2&quot;: {    &quot;type&quot;: &quot;reference:Customer&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField3&quot;: {    &quot;type&quot;: &quot;reference:MethodRouting&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField4&quot;: {    &quot;type&quot;: &quot;reference:DynamicEntity&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField5&quot;: {    &quot;type&quot;: &quot;reference:TransactionRequest&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField6&quot;: {    &quot;type&quot;: &quot;reference:ProductAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField7&quot;: {    &quot;type&quot;: &quot;reference:AccountAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField8&quot;: {    &quot;type&quot;: &quot;reference:TransactionAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField9&quot;: {    &quot;type&quot;: &quot;reference:CustomerAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField10&quot;: {    &quot;type&quot;: &quot;reference:AccountApplication&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField11&quot;: {    &quot;type&quot;: &quot;reference:CardAttribute&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField12&quot;: {    &quot;type&quot;: &quot;reference:Counterparty&quot;,    &quot;example&quot;: &quot;db959029-9edf-45cd-8542-78bad5c9ce85&quot;}&quot;someField13&quot;: {    &quot;type&quot;: &quot;reference:Branch:bankId&amp;branchId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;branchId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField14&quot;: {    &quot;type&quot;: &quot;reference:Atm:bankId&amp;atmId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;atmId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField15&quot;: {    &quot;type&quot;: &quot;reference:BankAccount:bankId&amp;accountId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField16&quot;: {    &quot;type&quot;: &quot;reference:Product:bankId&amp;productCode&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;productCode=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField17&quot;: {    &quot;type&quot;: &quot;reference:PhysicalCard:bankId&amp;cardId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;cardId=ded55179-f4ba-4936-9127-5c549944088c&quot;}&quot;someField18&quot;: {    &quot;type&quot;: &quot;reference:Transaction:bankId&amp;accountId&amp;transactionId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&amp;transactionId=462ec703-3df6-43a0-a88f-7219e4c020c1&quot;}&quot;someField19&quot;: {    &quot;type&quot;: &quot;reference:Counterparty:bankId&amp;accountId&amp;counterpartyId&quot;,    &quot;example&quot;: &quot;bankId=db959029-9edf-45cd-8542-78bad5c9ce85&amp;accountId=ded55179-f4ba-4936-9127-5c549944088c&amp;counterpartyId=462ec703-3df6-43a0-a88f-7219e4c020c1&quot;}</code></pre>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_dynamic_entity_with_http_info(body, dynamic_entity_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param DynamicEntityFooBar body: DynamicEntityFooBar object that needs to be added. (required)
        :param str dynamic_entity_id: the dynamic entity id  (required)
        :return: DynamicEntityFooBar
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'dynamic_entity_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_system_dynamic_entity" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_system_dynamic_entity`")
        # verify the required parameter 'dynamic_entity_id' is set
        if ('dynamic_entity_id' not in params) or (params['dynamic_entity_id'] is None):
            raise ValueError("Missing the required parameter `dynamic_entity_id` when calling `o_b_pv4_0_0_update_system_dynamic_entity`")

        resource_path = '/obp/v5.0.0/management/system-dynamic-entities/{DYNAMIC_ENTITY_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'dynamic_entity_id' in params:
            path_params['DYNAMIC_ENTITY_ID'] = params['dynamic_entity_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='DynamicEntityFooBar',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_system_level_endpoint_tag(self, body, **kwargs):
        """
        Update System Level Endpoint Tag
        <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_level_endpoint_tag(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_system_level_endpoint_tag_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_system_level_endpoint_tag_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_update_system_level_endpoint_tag_with_http_info(self, body, **kwargs):
        """
        Update System Level Endpoint Tag
        <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_level_endpoint_tag_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_system_level_endpoint_tag" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_system_level_endpoint_tag`")

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_update_system_level_endpoint_tag_0(self, body, **kwargs):
        """
        Update System Level Endpoint Tag
        <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_level_endpoint_tag_0(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_update_system_level_endpoint_tag_0_with_http_info(body, **kwargs)
        else:
            (data) = self.o_b_pv4_0_0_update_system_level_endpoint_tag_0_with_http_info(body, **kwargs)
            return data

    def o_b_pv4_0_0_update_system_level_endpoint_tag_0_with_http_info(self, body, **kwargs):
        """
        Update System Level Endpoint Tag
        <p>Update System Level Endpoint Tag, you can only update the tag_name here, operation_id can not be updated.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_update_system_level_endpoint_tag_0_with_http_info(body, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param EndpointTagJson400 body: EndpointTagJson400 object that needs to be added. (required)
        :return: BankLevelEndpointTagResponseJson400
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_update_system_level_endpoint_tag_0" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params) or (params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `o_b_pv4_0_0_update_system_level_endpoint_tag_0`")

        resource_path = '/obp/v5.0.0/management/endpoints/OPERATION_ID/tags/ENDPOINT_TAG_ID'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'PUT',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='BankLevelEndpointTagResponseJson400',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv4_0_0_verify_request_sign_response(self, **kwargs):
        """
        Verify Request and Sign Response of a current call
        <p>Verify Request and Sign Response of a current call.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_verify_request_sign_response(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv4_0_0_verify_request_sign_response_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv4_0_0_verify_request_sign_response_with_http_info(**kwargs)
            return data

    def o_b_pv4_0_0_verify_request_sign_response_with_http_info(self, **kwargs):
        """
        Verify Request and Sign Response of a current call
        <p>Verify Request and Sign Response of a current call.</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv4_0_0_verify_request_sign_response_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv4_0_0_verify_request_sign_response" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/development/echo/jws-verified-request-jws-signed-response'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type=None,
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv5_0_0_get_adapter_info(self, **kwargs):
        """
        Get Adapter Info
        <p>Get basic information about the Adapter.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv5_0_0_get_adapter_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: AdapterInfoJsonV500
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv5_0_0_get_adapter_info_with_http_info(**kwargs)
        else:
            (data) = self.o_b_pv5_0_0_get_adapter_info_with_http_info(**kwargs)
            return data

    def o_b_pv5_0_0_get_adapter_info_with_http_info(self, **kwargs):
        """
        Get Adapter Info
        <p>Get basic information about the Adapter.</p><p>Authentication is Optional</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv5_0_0_get_adapter_info_with_http_info(callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :return: AdapterInfoJsonV500
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = []
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv5_0_0_get_adapter_info" % key
                )
            params[key] = val
        del params['kwargs']

        resource_path = '/obp/v5.0.0/adapter'.replace('{format}', 'json')
        path_params = {}

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='AdapterInfoJsonV500',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))

    def o_b_pv5_0_0_get_metrics_at_bank(self, bank_id, **kwargs):
        """
        Get Metrics at Bank
        <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#109;a&#105;l&#x74;&#111;&#58;&#x30;1&#x2e;&#48;&#x30;&#48;&#x5a;&amp;l&#x69;&#x6d;&#105;&#116;&#61;&#x31;&#48;&#48;00&#38;o&#x66;&#102;&#115;&#x65;&#x74;&#x3d;&#48;&#38;&#97;&#x6e;o&#x6e;&#61;&#x66;al&#x73;&#101;&#x26;&#x61;p&#112;&#95;&#x6e;&#x61;&#x6d;&#101;=&#84;&#101;&#x61;t&#65;&#x70;p&amp;&#x69;&#x6d;p&#108;&#101;&#109;&#x65;&#x6e;&#x74;e&#100;&#95;&#x69;&#110;_&#x76;&#x65;&#x72;&#x73;i&#x6f;&#x6e;&#x3d;&#x76;&#x32;.&#49;&#x2e;0&amp;v&#101;&#114;b&#61;&#x50;O&#83;T&#x26;&#117;&#115;&#x65;&#x72;&#x5f;i&#100;=&#99;&#55;&#x62;&#x36;c&#98;&#x34;&#x37;-c&#x62;&#x39;&#54;&#45;&#52;&#52;&#x34;&#49;&#45;8&#x38;&#x30;&#49;-&#x33;&#53;&#98;&#53;74&#x35;6&#x37;&#x35;&#x33;&#97;&#38;&#x75;&#x73;&#101;r_&#x6e;&#x61;m&#x65;&#x3d;&#x73;u&#x73;&#x61;&#x6e;&#46;uk&#46;&#50;&#57;@&#x65;&#120;&#97;m&#x70;&#108;e&#46;&#x63;&#x6f;&#109;\">01.&#48;&#48;&#48;&#90;&#x26;&#108;&#105;&#x6d;&#x69;&#116;&#61;&#49;&#x30;0&#x30;0&amp;&#x6f;&#102;&#x66;&#x73;&#101;t&#61;0&#x26;&#97;&#x6e;&#111;&#x6e;=&#102;a&#108;&#115;&#101;&#x26;&#x61;&#x70;p&#x5f;&#x6e;&#97;&#109;&#101;&#61;T&#x65;&#x61;&#116;&#65;&#112;&#112;&amp;&#x69;&#x6d;&#112;&#x6c;&#101;&#109;&#x65;&#110;t&#x65;&#x64;&#95;&#x69;&#110;&#95;&#118;&#x65;&#114;sio&#110;&#61;&#118;&#50;.1&#x2e;0&#38;v&#x65;&#114;&#98;&#61;&#x50;&#x4f;&#83;&#84;&#x26;u&#x73;&#x65;&#114;&#95;&#x69;d&#61;c&#x37;&#x62;&#x36;&#99;&#x62;&#52;&#55;-&#99;&#98;&#x39;&#54;&#45;&#52;&#52;&#52;1&#x2d;&#56;&#56;&#48;&#49;-&#51;&#53;&#98;&#x35;&#x37;&#52;&#53;&#54;&#x37;53&#x61;&#x26;&#x75;&#x73;&#x65;&#x72;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#115;&#x61;&#110;.&#x75;k&#46;&#50;&#x39;&#x40;&#101;&#120;&#97;&#x6d;&#112;l&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv5_0_0_get_metrics_at_bank(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: MetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('callback'):
            return self.o_b_pv5_0_0_get_metrics_at_bank_with_http_info(bank_id, **kwargs)
        else:
            (data) = self.o_b_pv5_0_0_get_metrics_at_bank_with_http_info(bank_id, **kwargs)
            return data

    def o_b_pv5_0_0_get_metrics_at_bank_with_http_info(self, bank_id, **kwargs):
        """
        Get Metrics at Bank
        <p>Get the all metrics at the Bank specified by BANK_ID</p><p>require CanReadMetrics role</p><p>Filters Part 1.<em>filtering</em> (no wilde cards etc.) parameters to GET /management/metrics</p><p>Should be able to filter on the following metrics fields</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:01.000Z&amp;limit=50&amp;offset=2</p><p>1 from_date (defaults to one week before current date): eg:from_date=1100-01-01T01:01:01.000Z</p><p>2 to_date (defaults to current date) eg:to_date=1100-01-01T01:01:01.000Z</p><p>3 limit (for pagination: defaults to 50)  eg:limit=200</p><p>4 offset (for pagination: zero index, defaults to 0) eg: offset=10</p><p>5 sort_by (defaults to date field) eg: sort_by=date<br />possible values:<br />&quot;url&quot;,<br />&quot;date&quot;,<br />&quot;user_name&quot;,<br />&quot;app_name&quot;,<br />&quot;developer_email&quot;,<br />&quot;implemented_by_partial_function&quot;,<br />&quot;implemented_in_version&quot;,<br />&quot;consumer_id&quot;,<br />&quot;verb&quot;</p><p>6 direction (defaults to date desc) eg: direction=desc</p><p>eg: /management/metrics?from_date=1100-01-01T01:01:01.000Z&amp;to_date=1100-01-01T01:01:<a href=\"&#109;a&#105;l&#x74;&#111;&#58;&#x30;1&#x2e;&#48;&#x30;&#48;&#x5a;&amp;l&#x69;&#x6d;&#105;&#116;&#61;&#x31;&#48;&#48;00&#38;o&#x66;&#102;&#115;&#x65;&#x74;&#x3d;&#48;&#38;&#97;&#x6e;o&#x6e;&#61;&#x66;al&#x73;&#101;&#x26;&#x61;p&#112;&#95;&#x6e;&#x61;&#x6d;&#101;=&#84;&#101;&#x61;t&#65;&#x70;p&amp;&#x69;&#x6d;p&#108;&#101;&#109;&#x65;&#x6e;&#x74;e&#100;&#95;&#x69;&#110;_&#x76;&#x65;&#x72;&#x73;i&#x6f;&#x6e;&#x3d;&#x76;&#x32;.&#49;&#x2e;0&amp;v&#101;&#114;b&#61;&#x50;O&#83;T&#x26;&#117;&#115;&#x65;&#x72;&#x5f;i&#100;=&#99;&#55;&#x62;&#x36;c&#98;&#x34;&#x37;-c&#x62;&#x39;&#54;&#45;&#52;&#52;&#x34;&#49;&#45;8&#x38;&#x30;&#49;-&#x33;&#53;&#98;&#53;74&#x35;6&#x37;&#x35;&#x33;&#97;&#38;&#x75;&#x73;&#101;r_&#x6e;&#x61;m&#x65;&#x3d;&#x73;u&#x73;&#x61;&#x6e;&#46;uk&#46;&#50;&#57;@&#x65;&#120;&#97;m&#x70;&#108;e&#46;&#x63;&#x6f;&#109;\">01.&#48;&#48;&#48;&#90;&#x26;&#108;&#105;&#x6d;&#x69;&#116;&#61;&#49;&#x30;0&#x30;0&amp;&#x6f;&#102;&#x66;&#x73;&#101;t&#61;0&#x26;&#97;&#x6e;&#111;&#x6e;=&#102;a&#108;&#115;&#101;&#x26;&#x61;&#x70;p&#x5f;&#x6e;&#97;&#109;&#101;&#61;T&#x65;&#x61;&#116;&#65;&#112;&#112;&amp;&#x69;&#x6d;&#112;&#x6c;&#101;&#109;&#x65;&#110;t&#x65;&#x64;&#95;&#x69;&#110;&#95;&#118;&#x65;&#114;sio&#110;&#61;&#118;&#50;.1&#x2e;0&#38;v&#x65;&#114;&#98;&#61;&#x50;&#x4f;&#83;&#84;&#x26;u&#x73;&#x65;&#114;&#95;&#x69;d&#61;c&#x37;&#x62;&#x36;&#99;&#x62;&#52;&#55;-&#99;&#98;&#x39;&#54;&#45;&#52;&#52;&#52;1&#x2d;&#56;&#56;&#48;&#49;-&#51;&#53;&#98;&#x35;&#x37;&#52;&#53;&#54;&#x37;53&#x61;&#x26;&#x75;&#x73;&#x65;&#x72;_&#110;&#97;&#x6d;&#101;&#61;&#x73;&#117;&#115;&#x61;&#110;.&#x75;k&#46;&#50;&#x39;&#x40;&#101;&#120;&#97;&#x6d;&#112;l&#101;&#x2e;&#x63;&#x6f;&#x6d;</a>&amp;consumer_id=78</p><p>Other filters:</p><p>7 consumer_id  (if null ignore)</p><p>8 user_id (if null ignore)</p><p>9 anon (if null ignore) only support two value : true (return where user_id is null.) or false (return where user_id is not null.)</p><p>10 url (if null ignore), note: can not contain '&amp;'.</p><p>11 app_name (if null ignore)</p><p>12 implemented_by_partial_function (if null ignore),</p><p>13 implemented_in_version (if null ignore)</p><p>14 verb (if null ignore)</p><p>15 correlation_id (if null ignore)</p><p>16 duration (if null ignore) non digit chars will be silently omitted</p><p>Authentication is Mandatory</p>

        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please define a `callback` function
        to be invoked when receiving the response.
        >>> def callback_function(response):
        >>>     pprint(response)
        >>>
        >>> thread = api.o_b_pv5_0_0_get_metrics_at_bank_with_http_info(bank_id, callback=callback_function)

        :param callback function: The callback function
            for asynchronous request. (optional)
        :param str bank_id: The bank id (required)
        :return: MetricsJson
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['bank_id']
        all_params.append('callback')
        all_params.append('_return_http_data_only')

        params = locals()
        for key, val in iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method o_b_pv5_0_0_get_metrics_at_bank" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'bank_id' is set
        if ('bank_id' not in params) or (params['bank_id'] is None):
            raise ValueError("Missing the required parameter `bank_id` when calling `o_b_pv5_0_0_get_metrics_at_bank`")

        resource_path = '/obp/v5.0.0/management/metrics/banks/{BANK_ID}'.replace('{format}', 'json')
        path_params = {}
        if 'bank_id' in params:
            path_params['BANK_ID'] = params['bank_id']

        query_params = {}

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None

        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.\
            select_header_accept([])
        if not header_params['Accept']:
            del header_params['Accept']

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.\
            select_header_content_type([])

        # Authentication setting
        auth_settings = ['directLogin', 'gatewayLogin']

        return self.api_client.call_api(resource_path, 'GET',
                                            path_params,
                                            query_params,
                                            header_params,
                                            body=body_params,
                                            post_params=form_params,
                                            files=local_var_files,
                                            response_type='MetricsJson',
                                            auth_settings=auth_settings,
                                            callback=params.get('callback'),
                                            _return_http_data_only=params.get('_return_http_data_only'))
